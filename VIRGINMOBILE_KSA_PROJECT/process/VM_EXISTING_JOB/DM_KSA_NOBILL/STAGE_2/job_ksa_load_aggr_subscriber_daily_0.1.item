<?xml version="1.0" encoding="UTF-8" standalone="no"?><talendfile:ProcessType xmlns:talendfile="platform:/resource/org.talend.model/model/TalendFile.xsd" xmlns:xmi="http://www.omg.org/XMI" defaultContext="KSA_NONPROD" framework="" jobType="Standard" xmi:version="2.0">
  <context confirmationNeeded="false" name="KSA_NONPROD">
    <contextParameter comment="" internalId="_yyduR7ksEeqLfP5Yr4khFQ" name="vLoadDate" prompt="vLoadDate?" promptNeeded="false" type="id_String" value=""/>
    <contextParameter comment="" internalId="_yyduSLksEeqLfP5Yr4khFQ" name="vLoadMonth" prompt="vLoadMonth?" promptNeeded="false" type="id_String" value=""/>
    <contextParameter comment="" internalId="_yyduSbksEeqLfP5Yr4khFQ" name="target_tablename" prompt="target_tablename?" promptNeeded="false" type="id_String" value="nobill_aggr_subscriber_daily"/>
    <contextParameter comment="yyyy-MM-dd" internalId="_yyduSrksEeqLfP5Yr4khFQ" name="vStartDate" prompt="vStartDate?" promptNeeded="false" type="id_String" value=""/>
    <contextParameter comment="yyyy-MM-dd" internalId="_yyduS7ksEeqLfP5Yr4khFQ" name="vEndDate" prompt="vEndDate?" promptNeeded="false" type="id_String" value=""/>
    <contextParameter comment="" internalId="_yyduTLksEeqLfP5Yr4khFQ" name="vDays" prompt="vDays?" promptNeeded="false" type="id_Long" value=""/>
    <contextParameter comment="" internalId="_yyduTbksEeqLfP5Yr4khFQ" name="vDimEventTable" prompt="vDimEventTable?" promptNeeded="false" type="id_String" value=""/>
    <contextParameter comment="" name="connection_verticadb_additionalparam" prompt="connection_verticadb_additionalparam?" promptNeeded="false" repositoryContextId="_umyxcHglEeq7va8PH6KsVQ" type="id_String" value=""/>
    <contextParameter comment="" name="connection_verticadb_schema_prod" prompt="connection_verticadb_schema_prod?" promptNeeded="false" repositoryContextId="_umyxcHglEeq7va8PH6KsVQ" type="id_String" value="ksa_dev"/>
    <contextParameter comment="" name="connection_verticadb_host" prompt="connection_verticadb_host?" promptNeeded="false" repositoryContextId="_umyxcHglEeq7va8PH6KsVQ" type="id_String" value="10.4.93.10"/>
    <contextParameter comment="" name="connection_verticadb_port" prompt="connection_verticadb_port?" promptNeeded="false" repositoryContextId="_umyxcHglEeq7va8PH6KsVQ" type="id_String" value="5433"/>
    <contextParameter comment="" name="connection_verticadb_username" prompt="connection_verticadb_username?" promptNeeded="false" repositoryContextId="_umyxcHglEeq7va8PH6KsVQ" type="id_String" value="talend"/>
    <contextParameter comment="" name="connection_verticadb_schema_stg" prompt="connection_verticadb_schema_stg?" promptNeeded="false" repositoryContextId="_umyxcHglEeq7va8PH6KsVQ" type="id_String" value="ksa_dev"/>
    <contextParameter comment="" name="connection_verticadb_schema_audit" prompt="connection_verticadb_schema_audit?" promptNeeded="false" repositoryContextId="_umyxcHglEeq7va8PH6KsVQ" type="id_String" value="ksa_dev"/>
    <contextParameter comment="" name="connection_verticadb_password" prompt="connection_verticadb_password?" promptNeeded="false" repositoryContextId="_umyxcHglEeq7va8PH6KsVQ" type="id_Password" value="enc:system.encryption.key.v1:yC5NZTmbGAYgPI5HrGeTmZIQ3tcvXGDSLlVhzcrSSTlyaodrzWPalIDMv4Y="/>
    <contextParameter comment="" name="connection_verticadb_database" prompt="connection_verticadb_database?" promptNeeded="false" repositoryContextId="_umyxcHglEeq7va8PH6KsVQ" type="id_String" value="ksa_db_prod"/>
  </context>
  <context confirmationNeeded="false" name="KSA_PROD">
    <contextParameter comment="" internalId="_yyduR7ksEeqLfP5Yr4khFQ" name="vLoadDate" prompt="vLoadDate?" promptNeeded="false" type="id_String" value=""/>
    <contextParameter comment="" internalId="_yyduSLksEeqLfP5Yr4khFQ" name="vLoadMonth" prompt="vLoadMonth?" promptNeeded="false" type="id_String" value=""/>
    <contextParameter comment="" internalId="_yyduSbksEeqLfP5Yr4khFQ" name="target_tablename" prompt="target_tablename?" promptNeeded="false" type="id_String" value="nobill_aggr_subscriber_daily"/>
    <contextParameter comment="yyyy-MM-dd" internalId="_yyduSrksEeqLfP5Yr4khFQ" name="vStartDate" prompt="vStartDate?" promptNeeded="false" type="id_String" value="2021-02-01"/>
    <contextParameter comment="yyyy-MM-dd" internalId="_yyduS7ksEeqLfP5Yr4khFQ" name="vEndDate" prompt="vEndDate?" promptNeeded="false" type="id_String" value="2021-03-31"/>
    <contextParameter comment="" internalId="_yyduTLksEeqLfP5Yr4khFQ" name="vDays" prompt="vDays?" promptNeeded="false" type="id_Long" value=""/>
    <contextParameter comment="" internalId="_yyduTbksEeqLfP5Yr4khFQ" name="vDimEventTable" prompt="vDimEventTable?" promptNeeded="false" type="id_String" value=""/>
    <contextParameter comment="" name="connection_verticadb_additionalparam" prompt="connection_verticadb_additionalparam?" promptNeeded="false" repositoryContextId="_umyxcHglEeq7va8PH6KsVQ" type="id_String" value=""/>
    <contextParameter comment="" name="connection_verticadb_schema_prod" prompt="connection_verticadb_schema_prod?" promptNeeded="false" repositoryContextId="_umyxcHglEeq7va8PH6KsVQ" type="id_String" value="ksa_prod"/>
    <contextParameter comment="" name="connection_verticadb_host" prompt="connection_verticadb_host?" promptNeeded="false" repositoryContextId="_umyxcHglEeq7va8PH6KsVQ" type="id_String" value="10.4.93.10"/>
    <contextParameter comment="" name="connection_verticadb_port" prompt="connection_verticadb_port?" promptNeeded="false" repositoryContextId="_umyxcHglEeq7va8PH6KsVQ" type="id_String" value="5433"/>
    <contextParameter comment="" name="connection_verticadb_username" prompt="connection_verticadb_username?" promptNeeded="false" repositoryContextId="_umyxcHglEeq7va8PH6KsVQ" type="id_String" value="talend"/>
    <contextParameter comment="" name="connection_verticadb_schema_stg" prompt="connection_verticadb_schema_stg?" promptNeeded="false" repositoryContextId="_umyxcHglEeq7va8PH6KsVQ" type="id_String" value="ksa_stg"/>
    <contextParameter comment="" name="connection_verticadb_schema_audit" prompt="connection_verticadb_schema_audit?" promptNeeded="false" repositoryContextId="_umyxcHglEeq7va8PH6KsVQ" type="id_String" value="ksa_audit"/>
    <contextParameter comment="" name="connection_verticadb_password" prompt="connection_verticadb_password?" promptNeeded="false" repositoryContextId="_umyxcHglEeq7va8PH6KsVQ" type="id_Password" value="enc:system.encryption.key.v1:Ep0XyreHtybQFo4u2ZQYBQMHHcR+4SIkU8MpOvOPsTSE7vzwrz2dg/tIUf0="/>
    <contextParameter comment="" name="connection_verticadb_database" prompt="connection_verticadb_database?" promptNeeded="false" repositoryContextId="_umyxcHglEeq7va8PH6KsVQ" type="id_String" value="ksa_db_prod"/>
  </context>
  <parameters>
    <elementParameter field="TEXT" name="SCREEN_OFFSET_X" show="false" value="160"/>
    <elementParameter field="TEXT" name="SCREEN_OFFSET_Y" show="false" value="224"/>
    <elementParameter field="TEXT" name="REPOSITORY_CONNECTION_ID" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_PROPERTY_TYPENAME" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_HADOOP_DISTRIBUTION" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_HADOOP_VERSION" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_ENABLE_KERBEROS" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_NAME_NODE_PRINCIPAL" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_USERNAME" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_GROUP" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_USE_KEYTAB" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_KT_PRINCIPAL" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_KEY_TAB" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_ENABLE_OO_KERBEROS" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_NAME_NODE_END_POINT" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_JOB_TRACKER_ENDPOINT" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_END_POINT" show="false" value=""/>
    <elementParameter field="CHECK" name="IMPLICITCONTEXT_USE_PROJECT_SETTINGS" show="false" value="true"/>
    <elementParameter field="CHECK" name="STATANDLOG_USE_PROJECT_SETTINGS" show="false" value="true"/>
    <elementParameter field="CHECK" name="MULTI_THREAD_EXECATION" value="false"/>
    <elementParameter field="TEXT" name="PARALLELIZE_UNIT_SIZE" value="25000"/>
    <elementParameter field="CHECK" name="IMPLICIT_TCONTEXTLOAD" value="false"/>
    <elementParameter field="RADIO" name="FROM_FILE_FLAG_IMPLICIT_CONTEXT" show="false" value="false"/>
    <elementParameter field="RADIO" name="FROM_DATABASE_FLAG_IMPLICIT_CONTEXT" show="false" value="false"/>
    <elementParameter field="FILE" name="IMPLICIT_TCONTEXTLOAD_FILE" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="FIELDSEPARATOR" show="false" value="&quot;&quot;"/>
    <elementParameter field="CHECK" name="OVERRIDE_ENCODING_FLAG" show="false" value="false"/>
    <elementParameter field="ENCODING_TYPE" name="OVERRIDE_ENCODING_IN_EXTRA" show="false" value="ISO-8859-15"/>
    <elementParameter field="TECHNICAL" name="OVERRIDE_ENCODING_IN_EXTRA:ENCODING_TYPE" show="false" value="ISO-8859-15"/>
    <elementParameter field="CLOSED_LIST" name="DB_TYPE_IMPLICIT_CONTEXT" show="false" value=""/>
    <elementParameter field="CLOSED_LIST" name="DB_VERSION_IMPLICIT_CONTEXT" show="false" value=""/>
    <elementParameter field="TEXT" name="URL_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="TABLE" name="DRIVER_JAR_IMPLICIT_CONTEXT" show="false"/>
    <elementParameter field="TEXT" name="DRIVER_CLASS_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="HOST_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="PORT_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="DBNAME_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="LOCAL_SERVICE_NAME_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="PROPERTIES_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="SCHEMA_DB_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="USER_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="PASSWORD" name="PASS_IMPLICIT_CONTEXT" show="false" value="enc:system.encryption.key.v1:2xgVEqp99eOLVXY5iKZZOHWIrxfpiyhsaWTuX+sJ"/>
    <elementParameter field="FILE" name="DBFILE_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="DBTABLE" name="DBTABLE_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="QUERY_CONDITION_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="CLOSED_LIST" name="LOAD_NEW_VARIABLE" show="false" value="Warning"/>
    <elementParameter field="CLOSED_LIST" name="NOT_LOAD_OLD_VARIABLE" show="false" value="Warning"/>
    <elementParameter field="CHECK" name="PRINT_OPERATIONS" show="false" value="false"/>
    <elementParameter field="CHECK" name="DISABLE_ERROR" show="false" value="false"/>
    <elementParameter field="CHECK" name="DISABLE_WARNINGS" show="false" value="false"/>
    <elementParameter field="CHECK" name="DISABLE_INFO" show="false" value="false"/>
    <elementParameter field="CHECK" name="ON_STATCATCHER_FLAG" value="false"/>
    <elementParameter field="CHECK" name="ON_LOGCATCHER_FLAG" value="false"/>
    <elementParameter field="CHECK" name="ON_METERCATCHER_FLAG" value="false"/>
    <elementParameter field="CHECK" name="ON_CONSOLE_FLAG" show="false" value="false"/>
    <elementParameter field="CHECK" name="ON_FILES_FLAG" show="false" value="false"/>
    <elementParameter field="DIRECTORY" name="FILE_PATH" show="false" value="&quot;D:/VirgnMobile_TalendStudio/workspace_731_20200323/.metadata&quot;"/>
    <elementParameter field="TEXT" name="FILENAME_STATS" show="false" value="&quot;stats_file.txt&quot;"/>
    <elementParameter field="TEXT" name="FILENAME_LOGS" show="false" value="&quot;logs_file.txt&quot;"/>
    <elementParameter field="TEXT" name="FILENAME_METTER" show="false" value="&quot;meter_file.txt&quot;"/>
    <elementParameter field="ENCODING_TYPE" name="ENCODING" show="false" value="ISO-8859-15"/>
    <elementParameter field="TECHNICAL" name="ENCODING:ENCODING_TYPE" show="false" value="ISO-8859-15"/>
    <elementParameter field="CHECK" name="ON_DATABASE_FLAG" show="false" value="false"/>
    <elementParameter field="CLOSED_LIST" name="DB_TYPE" show="false" value="tJDBCOutput"/>
    <elementParameter field="CLOSED_LIST" name="DB_VERSION" show="false" value="ORACLE_12"/>
    <elementParameter field="TEXT" name="URL" show="false" value="&quot;&quot;"/>
    <elementParameter field="TABLE" name="DRIVER_JAR" show="false"/>
    <elementParameter field="TEXT" name="DRIVER_CLASS" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="HOST" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="PORT" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="DATASOURCE" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="DBNAME" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="LOCAL_SERVICE_NAME" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="PROPERTIES" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="SCHEMA_DB" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="USER" show="false" value="&quot;&quot;"/>
    <elementParameter field="PASSWORD" name="PASS" show="false" value="enc:system.encryption.key.v1:5kvACedt4oj2GeYQNp+Og2GyiLO3NNw5gs7lubRm"/>
    <elementParameter field="FILE" name="DBFILE" show="false" value="&quot;&quot;"/>
    <elementParameter field="DBTABLE" name="TABLE_STATS" show="false" value="&quot;&quot;"/>
    <elementParameter field="DBTABLE" name="TABLE_LOGS" show="false" value="&quot;&quot;"/>
    <elementParameter field="DBTABLE" name="TABLE_METER" show="false" value="&quot;&quot;"/>
    <elementParameter field="CHECK" name="CATCH_RUNTIME_ERRORS" show="false" value="true"/>
    <elementParameter field="CHECK" name="CATCH_USER_ERRORS" show="false" value="true"/>
    <elementParameter field="CHECK" name="CATCH_USER_WARNING" show="false" value="true"/>
    <elementParameter field="CHECK" name="CATCH_REALTIME_STATS" show="false" value="false"/>
    <elementParameter field="TEXT" name="HEADERFOOTER_HEADERID" show="false" value=""/>
    <elementParameter field="CHECK" name="HEADER_ENABLED" show="false" value="false"/>
    <elementParameter field="TEXT" name="HEADER_LIBRARY" show="false" value=""/>
    <elementParameter field="TEXT" name="HEADER_CODE" show="false" value=""/>
    <elementParameter field="TEXT" name="HEADER_IMPORT" show="false" value=""/>
    <elementParameter field="TEXT" name="HEADERFOOTER_FOOTERID" show="false" value=""/>
    <elementParameter field="CHECK" name="FOOTER_ENABLED" show="false" value="false"/>
    <elementParameter field="TEXT" name="FOOTER_LIBRARY" show="false" value=""/>
    <elementParameter field="TEXT" name="FOOTER_CODE" show="false" value=""/>
    <elementParameter field="TEXT" name="FOOTER_IMPORT" show="false" value=""/>
    <routinesParameter id="_uCmdUC3gEemv8rRsunnDIQ" name="DQTechnical"/>
    <routinesParameter id="_uCZB8i3gEemv8rRsunnDIQ" name="DataMasking"/>
    <routinesParameter id="_uCquwC3gEemv8rRsunnDIQ" name="DataOperation"/>
    <routinesParameter id="_uCfvoC3gEemv8rRsunnDIQ" name="DataQualityDependencies"/>
    <routinesParameter id="_uCcsUC3gEemv8rRsunnDIQ" name="DataQuality"/>
    <routinesParameter id="_uCjaAC3gEemv8rRsunnDIQ" name="DqStringHandling"/>
    <routinesParameter id="_uCtyEC3gEemv8rRsunnDIQ" name="Mathematical"/>
    <routinesParameter id="_uCyDgC3gEemv8rRsunnDIQ" name="Numeric"/>
    <routinesParameter id="_uC0fwC3gEemv8rRsunnDIQ" name="Relational"/>
    <routinesParameter id="_uDFlgC3gEemv8rRsunnDIQ" name="SQLike"/>
    <routinesParameter id="_uC3jEC3gEemv8rRsunnDIQ" name="StringHandling"/>
    <routinesParameter id="_uC7NcC3gEemv8rRsunnDIQ" name="TalendDataGenerator"/>
    <routinesParameter id="_uC9CoC3gEemv8rRsunnDIQ" name="TalendDate"/>
    <routinesParameter id="_uDCiMC3gEemv8rRsunnDIQ" name="TalendStringUtil"/>
    <routinesParameter id="_uDAF8C3gEemv8rRsunnDIQ" name="TalendString"/>
  </parameters>
  <node componentName="tVerticaRow" componentVersion="0.102" offsetLabelX="0" offsetLabelY="0" posX="384" posY="736">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tDBRow_1"/>
    <elementParameter field="CHECK" name="ACTIVATE" value="false"/>
    <elementParameter field="CHECK" name="TSTATCATCHER_STATS" value="true"/>
    <elementParameter field="CLOSED_LIST" name="DB_VERSION" value="VERTICA_9_0"/>
    <elementParameter field="CHECK" name="USE_EXISTING_CONNECTION" value="false"/>
    <elementParameter field="COMPONENT_LIST" name="CONNECTION" show="false" value=""/>
    <elementParameter field="TEXT" name="HOST" value="&quot;10.4.32.25&quot;"/>
    <elementParameter field="TEXT" name="PORT" value="&quot;5433&quot;"/>
    <elementParameter field="TEXT" name="DBNAME" value="&quot;ksa_db_prod&quot;"/>
    <elementParameter field="TEXT" name="SCHEMA_DB" value="&quot;stg&quot;"/>
    <elementParameter field="TEXT" name="TYPE" show="false" value="VERTICA"/>
    <elementParameter field="TEXT" name="USER" value="&quot;talend&quot;"/>
    <elementParameter field="PASSWORD" name="PASS" value="enc:system.encryption.key.v1:Bd/t9vp48/pt+/udQTqF78fNcnunPKQSapBewvLtWbd4xj7lVWxV9Q=="/>
    <elementParameter field="TECHNICAL" name="SCHEMA_REJECT:SCHEMA_TYPE" show="false" value="REPOSITORY"/>
    <elementParameter field="TECHNICAL" name="SCHEMA_REJECT:REPOSITORY_SCHEMA_TYPE" show="false" value="_m1_YICIYEemZppPRJ5rRnQ - nobill_tx_account_history"/>
    <elementParameter field="DBTABLE" name="TABLE" value="&quot;&quot;"/>
    <elementParameter field="QUERYSTORE_TYPE" name="QUERYSTORE" value="&quot;&quot;"/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:REPOSITORY_QUERYSTORE_TYPE" show="false" value=""/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:QUERYSTORE_TYPE" value="BUILT_IN"/>
    <elementParameter field="MEMO_SQL" name="QUERY" value="&quot;DELETE &#13;&#10;&#9;&#9;FROM &#13;&#10;&#9;&#9;&#9;&#9;prod.&quot; +context.target_tablename+&quot; &#13;&#10;        WHERE &#13;&#10;&#9;&#9;&#9;&#9;uds_date = '&quot;+context.vLoadDate+ &quot;'&quot;"/>
    <elementParameter field="CLOSED_LIST" name="USE_NB_LINE" value="NB_LINE_DELETED"/>
    <elementParameter field="LABEL" name="USE_NB_LINE_NOTE" value="* Only used if the query is an insert, an update or a delete."/>
    <elementParameter field="CHECK" name="DIE_ON_ERROR" value="true"/>
    <elementParameter field="TEXT" name="PROPERTIES" value="&quot;&quot;"/>
    <elementParameter field="CHECK" name="PROPAGATE_RECORD_SET" value="false"/>
    <elementParameter field="COLUMN_LIST" name="RECORD_SET_COLUMN" show="false" value=""/>
    <elementParameter field="CHECK" name="USE_PREPAREDSTATEMENT" value="false"/>
    <elementParameter field="TABLE" name="SET_PREPAREDSTATEMENT_PARAMETERS" show="false"/>
    <elementParameter field="TEXT" name="ENCODING" show="false" value="&quot;ISO-8859-15&quot;"/>
    <elementParameter field="TEXT" name="COMMIT_EVERY" value="10000"/>
    <elementParameter field="TEXT" name="LABEL" value="clear records if exists for load date-subscriber aggregates"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
    <metadata connector="FLOW" label="nobill_tx_account_history" name="tDBRow_1"/>
    <metadata connector="REJECT" label="nobill_tx_account_history" name="REJECT">
      <column defaultValue="" key="false" length="255" name="errorCode" nullable="true" originalLength="-1" precision="0" sourceType="" type="id_String" usefulColumn="true"/>
      <column defaultValue="" key="false" length="255" name="errorMessage" nullable="true" originalLength="-1" precision="0" sourceType="" type="id_String" usefulColumn="true"/>
    </metadata>
  </node>
  <node componentName="tVerticaRow" componentVersion="0.102" offsetLabelX="0" offsetLabelY="0" posX="1184" posY="736">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tDBRow_2"/>
    <elementParameter field="CHECK" name="ACTIVATE" value="false"/>
    <elementParameter field="TECHNICAL" name="PROPERTY:PROPERTY_TYPE" value="REPOSITORY"/>
    <elementParameter field="TECHNICAL" name="PROPERTY:REPOSITORY_PROPERTY_TYPE" show="false" value="_5iHVAEWDEemVVo7G2ZId6g"/>
    <elementParameter field="CLOSED_LIST" name="DB_VERSION" value="VERTICA_9_0"/>
    <elementParameter field="CHECK" name="USE_EXISTING_CONNECTION" value="false"/>
    <elementParameter field="COMPONENT_LIST" name="CONNECTION" show="false" value=""/>
    <elementParameter field="TEXT" name="HOST" value="&quot;10.4.32.25&quot;"/>
    <elementParameter field="TEXT" name="PORT" value="&quot;5433&quot;"/>
    <elementParameter field="TEXT" name="DBNAME" value="&quot;ksa_db_prod&quot;"/>
    <elementParameter field="TEXT" name="SCHEMA_DB" value="&quot;prod&quot;"/>
    <elementParameter field="TEXT" name="TYPE" show="false" value="VERTICA"/>
    <elementParameter field="TEXT" name="USER" value="&quot;talend&quot;"/>
    <elementParameter field="PASSWORD" name="PASS" value="enc:system.encryption.key.v1:KTyFVzAIJoMNliTrNkJLwU2L98lkNkRDctA0IZL1Vil6M8fJwHGKGQ=="/>
    <elementParameter field="TECHNICAL" name="SCHEMA_REJECT:SCHEMA_TYPE" show="false" value="REPOSITORY"/>
    <elementParameter field="TECHNICAL" name="SCHEMA_REJECT:REPOSITORY_SCHEMA_TYPE" show="false" value="_5iHVAEWDEemVVo7G2ZId6g - "/>
    <elementParameter field="DBTABLE" name="TABLE" value="&quot;&quot;"/>
    <elementParameter field="QUERYSTORE_TYPE" name="QUERYSTORE" value="&quot;&quot;"/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:REPOSITORY_QUERYSTORE_TYPE" show="false" value=""/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:QUERYSTORE_TYPE" value="BUILT_IN"/>
    <elementParameter field="MEMO_SQL" name="QUERY" value="&quot;INSERT INTO prod.&quot;+context.target_tablename+&quot; &#13;&#10;select *,&#13;&#10;case when uds_date = date('&quot;+context.vLoadDate+&quot;') and uds_activity_flag = 1 then 1 else 0 end as uds_1d_activity_flag,&#13;&#10;case when uds_date &gt;= date('&quot;+context.vLoadDate+&quot;') - 6 and uds_activity_flag = 1 then 1 else 0 end as  uds_7d_activity_flag,&#13;&#10;case when uds_date &gt;= date('&quot;+context.vLoadDate+&quot;') - 13 and uds_activity_flag = 1 then 1 else 0 end as  uds_14d_activity_flag,&#13;&#10;case when uds_date &gt;= date('&quot;+context.vLoadDate+&quot;') - 29 and uds_activity_flag = 1 then 1 else 0 end as  uds_30d_activity_flag,&#13;&#10;case when uds_date &gt;= date('&quot;+context.vLoadDate+&quot;') - 59 and uds_activity_flag = 1 then 1 else 0 end as  uds_60d_activity_flag,&#13;&#10;case when uds_date &gt;= date('&quot;+context.vLoadDate+&quot;') - 89 and uds_activity_flag = 1 then 1 else 0 end as  uds_90d_activity_flag,&#13;&#10;case when uds_date &gt;= date('&quot;+context.vLoadDate+&quot;') - 179 and uds_activity_flag = 1 then 1 else 0 end as  uds_180d_activity_flag,&#13;&#10;case when  to_char(uds_date,'YYYYMM') = '&quot;+context.vLoadMonth+&quot;' and uds_activity_flag = 1 then 1 else 0 end as  uds_monthly_activity_flag&#13;&#10;from (&#13;&#10;                select *,&#13;&#10;                case when uds_total_traffic_gross_revenue &gt; 0 or &#13;&#10;                uds_total_voice_mins &gt; 0 or &#13;&#10;                uds_total_sms_count &gt; 0 or &#13;&#10;                uds_total_data_volume_mb &gt; 0 or &#13;&#10;                uds_total_recharge_amount &gt; 0 or&#13;&#10;                uds_total_gross_upfront_data_bundle_revenue &gt; 0 or&#13;&#10;                uds_total_gross_upfront_voice_bundle_revenue &gt; 0 &#13;&#10;                                then 1 else 0 end as uds_activity_flag&#13;&#10;from&#13;&#10;(SELECT&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_accountnum::int uds_accountnum,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_date::date uds_date,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(ad_total_gross_revenue) uds_total_gross_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(ad_total_net_revenue) uds_total_net_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_subtype &lt;&gt; 'Expired Credit' then ad_total_gross_revenue else 0 end) uds_total_traffic_gross_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_subtype &lt;&gt; 'Expired Credit' then ad_total_net_revenue else 0 end) uds_total_traffic_net_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(ad_total_wholesale_cost) uds_total_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(ad_total_interconnect_revenue) uds_total_interconnect_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--Voice&#13;&#10;&#9;&#9;&#9;&#9;&#9;--gross revenue&#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' then ad_total_gross_revenue else 0 end) uds_total_gross_voice_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_subtype = 'Expired Credit' then ad_total_gross_revenue else 0 end) uds_total_gross_voice_expired_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' then ad_total_gross_revenue else 0 end) uds_total_gross_moc_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' then ad_total_gross_revenue else 0 end) uds_total_gross_moc_nat_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'On-Net Mobile' then ad_total_gross_revenue else 0 end) uds_total_gross_moc_nat_onnet_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Mobile' then ad_total_gross_revenue else 0 end) uds_total_gross_moc_nat_offnet_mobile_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Fixed' then ad_total_gross_revenue else 0 end) uds_total_gross_moc_nat_off_net_fixed_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Host' then ad_total_gross_revenue else 0 end) uds_total_gross_moc_nat_offnet_host_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Others' then ad_total_gross_revenue else 0 end) uds_total_gross_moc_nat_offnet_others_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' then ad_total_gross_revenue else 0 end) uds_total_gross_moc_intl_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'India' then ad_total_gross_revenue else 0 end) uds_total_gross_moc_india_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Philippines' then ad_total_gross_revenue else 0 end) uds_total_gross_moc_philippines_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Yemen' then ad_total_gross_revenue else 0 end) uds_total_gross_moc_yemen_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Pakistan' then ad_total_gross_revenue else 0 end) uds_total_gross_moc_pakistan_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Bangladesh' then ad_total_gross_revenue else 0 end) uds_total_gross_moc_bangladesh_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Nepal' then ad_total_gross_revenue else 0 end) uds_total_gross_moc_nepal_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Egypt' then ad_total_gross_revenue else 0 end) uds_total_gross_moc_egypt_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'UAE' then ad_total_gross_revenue else 0 end) uds_total_gross_moc_uae_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Sudan' then ad_total_gross_revenue else 0 end) uds_total_gross_moc_sudan_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country not in ('India', 'Philippines' , 'Yemen' , 'Pakistan' , 'Bangladesh' , 'Nepal' , 'Egypt' , 'UAE' , 'Sudan') then ad_total_gross_revenue else 0 end) uds_total_gross_moc_others_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'Roaming' then ad_total_gross_revenue else 0 end) uds_total_gross_moc_roam_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MTC' then ad_total_gross_revenue else 0 end) uds_total_gross_mtc_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--net revenue &#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' then ad_total_net_revenue else 0 end) uds_total_net_voice_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_subtype = 'Expired Credit' then ad_total_net_revenue else 0 end) uds_total_net_voice_expired_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' then ad_total_net_revenue else 0 end) uds_total_net_moc_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' then ad_total_net_revenue else 0 end) uds_total_net_moc_nat_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'On-Net Mobile' then ad_total_net_revenue else 0 end) uds_total_net_moc_nat_onnet_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Mobile' then ad_total_net_revenue else 0 end) uds_total_net_moc_nat_offnet_mobile_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Fixed' then ad_total_net_revenue else 0 end) uds_total_net_moc_nat_off_net_fixed_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Host' then ad_total_net_revenue else 0 end) uds_total_net_moc_nat_offnet_host_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Others' then ad_total_net_revenue else 0 end) uds_total_net_moc_offnet_others_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' then ad_total_net_revenue else 0 end) uds_total_net_moc_intl_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'India' then ad_total_net_revenue else 0 end) uds_total_net_moc_india_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Philippines' then ad_total_net_revenue else 0 end) uds_total_net_moc_philippines_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Yemen' then ad_total_net_revenue else 0 end) uds_total_net_moc_yemen_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Pakistan' then ad_total_net_revenue else 0 end) uds_total_net_moc_pakistan_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Bangladesh' then ad_total_net_revenue else 0 end) uds_total_net_moc_bangladesh_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Nepal' then ad_total_net_revenue else 0 end) uds_total_net_moc_nepal_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Egypt' then ad_total_net_revenue else 0 end) uds_total_net_moc_egypt_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'UAE' then ad_total_net_revenue else 0 end) uds_total_net_moc_uae_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Sudan' then ad_total_net_revenue else 0 end) uds_total_net_moc_sudan_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country not in ('India', 'Philippines' , 'Yemen' , 'Pakistan' , 'Bangladesh' , 'Nepal' , 'Egypt' , 'UAE' , 'Sudan') then ad_total_net_revenue else 0 end) uds_total_net_moc_others_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'Roaming' then ad_total_net_revenue else 0 end) uds_total_net_moc_roam_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MTC' then ad_total_net_revenue else 0 end) uds_total_net_mtc_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--payg gross revenue&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' then ad_total_gross_revenue_payg else 0 end) uds_total_gross_payg_voice_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' then ad_total_gross_revenue_payg else 0 end) uds_total_gross_payg_moc_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' then ad_total_gross_revenue_payg else 0 end) uds_total_gross_payg_moc_nat_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'On-Net Mobile' then ad_total_gross_revenue_payg else 0 end) uds_total_gross_payg_moc_nat_onnet_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Mobile' then ad_total_gross_revenue_payg else 0 end) uds_total_gross_payg_moc_nat_offnet_mobile_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Fixed' then ad_total_gross_revenue_payg else 0 end) uds_total_gross_payg_moc_nat_off_net_fixed_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Host' then ad_total_gross_revenue_payg else 0 end) uds_total_gross_payg_moc_nat_offnet_host_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Others' then ad_total_gross_revenue_payg else 0 end) uds_total_gross_payg_moc_nat_offnet_others_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' then ad_total_gross_revenue_payg else 0 end) uds_total_gross_payg_moc_intl_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'Roaming' then ad_total_gross_revenue_payg else 0 end) uds_total_gross_payg_moc_roam_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'India' then ad_total_gross_revenue_payg else 0 end) uds_total_gross_payg_moc_intl_india_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Philippines' then ad_total_gross_revenue_payg else 0 end) uds_total_gross_payg_moc_intl_philippines_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Yemen' then ad_total_gross_revenue_payg else 0 end) uds_total_gross_payg_moc_intl_yemen_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Pakistan' then ad_total_gross_revenue_payg else 0 end) uds_total_gross_payg_moc_intl_pakistan_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Bangladesh' then ad_total_gross_revenue_payg else 0 end) uds_total_gross_payg_moc_intl_bangladesh_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Nepal' then ad_total_gross_revenue_payg else 0 end) uds_total_gross_payg_moc_intl_nepal_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Egypt' then ad_total_gross_revenue_payg else 0 end) uds_total_gross_payg_moc_intl_egypt_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'UAE' then ad_total_gross_revenue_payg else 0 end) uds_total_gross_payg_moc_intl_uae_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Sudan' then ad_total_gross_revenue_payg else 0 end) uds_total_gross_payg_moc_intl_sudan_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country not in ('India', 'Philippines' , 'Yemen' , 'Pakistan' , 'Bangladesh' , 'Nepal' , 'Egypt' , 'UAE' , 'Sudan') then ad_total_gross_revenue_payg else 0 end) uds_total_gross_payg_moc_intl_others_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MTC' then ad_total_gross_revenue_payg else 0 end) uds_total_gross_payg_mtc_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--payg net revenue&#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' then ad_total_net_revenue_payg else 0 end) uds_total_net_payg_voice_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' then ad_total_net_revenue_payg else 0 end) uds_total_net_payg_moc_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' then ad_total_net_revenue_payg else 0 end) uds_total_net_payg_moc_nat_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'On-Net Mobile' then ad_total_net_revenue_payg else 0 end) uds_total_net_payg_moc_nat_onnet_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Mobile' then ad_total_net_revenue_payg else 0 end) uds_total_net_payg_moc_nat_offnet_mobile_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Fixed' then ad_total_net_revenue_payg else 0 end) uds_total_net_payg_moc_nat_off_net_fixed_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Host' then ad_total_net_revenue_payg else 0 end) uds_total_net_payg_moc_nat_offnet_host_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Others' then ad_total_net_revenue_payg else 0 end) uds_total_net_payg_moc_nat_offnet_others_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' then ad_total_net_revenue_payg else 0 end) uds_total_net_payg_moc_intl_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'Roaming' then ad_total_net_revenue_payg else 0 end) uds_total_net_payg_moc_roam_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'India' then ad_total_net_revenue_payg else 0 end) uds_total_net_payg_moc_intl_india_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Philippines' then ad_total_net_revenue_payg else 0 end) uds_total_net_payg_moc_intl_philippines_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Yemen' then ad_total_net_revenue_payg else 0 end) uds_total_net_payg_moc_intl_yemen_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Pakistan' then ad_total_net_revenue_payg else 0 end) uds_total_net_payg_moc_intl_pakistan_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Bangladesh' then ad_total_net_revenue_payg else 0 end) uds_total_net_payg_moc_intl_bangladesh_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Nepal' then ad_total_net_revenue_payg else 0 end) uds_total_net_payg_moc_intl_nepal_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Egypt' then ad_total_net_revenue_payg else 0 end) uds_total_net_payg_moc_intl_egypt_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'UAE' then ad_total_net_revenue_payg else 0 end) uds_total_net_payg_moc_intl_uae_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Sudan' then ad_total_net_revenue_payg else 0 end) uds_total_net_payg_moc_intl_sudan_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country not in ('India', 'Philippines' , 'Yemen' , 'Pakistan' , 'Bangladesh' , 'Nepal' , 'Egypt' , 'UAE' , 'Sudan') then ad_total_net_revenue_payg else 0 end) uds_total_net_payg_moc_intl_others_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MTC' then ad_total_net_revenue_payg else 0 end) uds_total_net_payg_mtc_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--bundle gross revenue&#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' then ad_total_gross_revenue_usage_bundle else 0 end) uds_total_gross_usage_bundle_voice_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' then ad_total_gross_revenue_usage_bundle else 0 end) uds_total_gross_usage_bundle_moc_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' then ad_total_gross_revenue_usage_bundle else 0 end) uds_total_gross_usage_bundle_moc_nat_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'On-Net Mobile' then ad_total_gross_revenue_usage_bundle else 0 end) uds_total_gross_usage_bundle_moc_nat_onnet_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Mobile' then ad_total_gross_revenue_usage_bundle else 0 end) uds_total_gross_usage_bundle_moc_nat_offnet_mobile_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Fixed' then ad_total_gross_revenue_usage_bundle else 0 end) uds_total_gross_usage_bundle_moc_nat_off_net_fixed_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Host' then ad_total_gross_revenue_usage_bundle else 0 end) uds_total_gross_usage_bundle_moc_nat_offnet_host_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Others' then ad_total_gross_revenue_usage_bundle else 0 end) uds_total_gross_usage_bundle_moc_nat_offnet_others_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' then ad_total_gross_revenue_usage_bundle else 0 end) uds_total_gross_usage_bundle_moc_intl_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'India' then ad_total_gross_revenue_usage_bundle else 0 end) uds_total_gross_usage_bundle_moc_india_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Philippines' then ad_total_gross_revenue_usage_bundle else 0 end) uds_total_gross_usage_bundle_moc_philippines_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Yemen' then ad_total_gross_revenue_usage_bundle else 0 end) uds_total_gross_usage_bundle_moc_yemen_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Pakistan' then ad_total_gross_revenue_usage_bundle else 0 end) uds_total_gross_usage_bundle_moc_pakistan_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Bangladesh' then ad_total_gross_revenue_usage_bundle else 0 end) uds_total_gross_usage_bundle_moc_bangladesh_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Nepal' then ad_total_gross_revenue_usage_bundle else 0 end) uds_total_gross_usage_bundle_moc_nepal_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Egypt' then ad_total_gross_revenue_usage_bundle else 0 end) uds_total_gross_usage_bundle_moc_egypt_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'UAE' then ad_total_gross_revenue_usage_bundle else 0 end) uds_total_gross_usage_bundle_moc_uae_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Sudan' then ad_total_gross_revenue_usage_bundle else 0 end) uds_total_gross_usage_bundle_moc_sudan_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country not in ('India', 'Philippines' , 'Yemen' , 'Pakistan' , 'Bangladesh' , 'Nepal' , 'Egypt' , 'UAE' , 'Sudan') then ad_total_gross_revenue_usage_bundle else 0 end) uds_total_gross_usage_bundle_moc_intl_others_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'Roaming' then ad_total_gross_revenue_usage_bundle else 0 end) uds_total_gross_usage_bundle_moc_roam_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--bundle net revenue&#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' then ad_total_net_revenue_usage_bundle else 0 end) uds_total_net_usage_bundle_voice_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' then ad_total_net_revenue_usage_bundle else 0 end) uds_total_net_usage_bundle_moc_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' then ad_total_net_revenue_usage_bundle else 0 end) uds_total_net_usage_bundle_moc_nat_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'On-Net Mobile' then ad_total_net_revenue_usage_bundle else 0 end) uds_total_net_usage_bundle_moc_nat_onnet_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Mobile' then ad_total_net_revenue_usage_bundle else 0 end) uds_total_net_usage_bundle_moc_nat_offnet_mobile_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Fixed' then ad_total_net_revenue_usage_bundle else 0 end) uds_total_net_usage_bundle_moc_nat_off_net_fixed_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Host' then ad_total_net_revenue_usage_bundle else 0 end) uds_total_net_usage_bundle_moc_nat_offnet_host_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Others' then ad_total_net_revenue_usage_bundle else 0 end) uds_total_net_usage_bundle_moc_nat_offnet_others_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' then ad_total_net_revenue_usage_bundle else 0 end) uds_total_net_usage_bundle_moc_intl_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'India' then ad_total_net_revenue_usage_bundle else 0 end) uds_total_net_usage_bundle_moc_india_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Philippines' then ad_total_net_revenue_usage_bundle else 0 end) uds_total_net_usage_bundle_moc_philippines_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Yemen' then ad_total_net_revenue_usage_bundle else 0 end) uds_total_net_usage_bundle_moc_yemen_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Pakistan' then ad_total_net_revenue_usage_bundle else 0 end) uds_total_net_usage_bundle_moc_pakistan_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Bangladesh' then ad_total_net_revenue_usage_bundle else 0 end) uds_total_net_usage_bundle_moc_bangladesh_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Nepal' then ad_total_net_revenue_usage_bundle else 0 end) uds_total_net_usage_bundle_moc_nepal_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Egypt' then ad_total_net_revenue_usage_bundle else 0 end) uds_total_net_usage_bundle_moc_egypt_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'UAE' then ad_total_net_revenue_usage_bundle else 0 end) uds_total_net_usage_bundle_moc_uae_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Sudan' then ad_total_net_revenue_usage_bundle else 0 end) uds_total_net_usage_bundle_moc_sudan_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country not in ('India', 'Philippines' , 'Yemen' , 'Pakistan' , 'Bangladesh' , 'Nepal' , 'Egypt' , 'UAE' , 'Sudan') then ad_total_net_revenue_usage_bundle else 0 end) uds_total_net_usage_bundle_moc_intl_others_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'Roaming' then ad_total_net_revenue_usage_bundle else 0 end) uds_total_net_usage_bundle_moc_roam_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--wholesale cost &#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' then ad_total_wholesale_cost_counter else 0 end) uds_total_voice_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_subtype = 'Expired Credit' then ad_total_wholesale_cost_counter else 0 end) uds_total_voice_expired_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' then ad_total_wholesale_cost_counter else 0 end) uds_total_moc_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' then ad_total_wholesale_cost_counter else 0 end) uds_total_moc_nat_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'On-Net Mobile' then ad_total_wholesale_cost_counter else 0 end) uds_total_moc_nat_onnet_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Mobile' then ad_total_wholesale_cost_counter else 0 end) uds_total_moc_nat_offnet_mobile_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Fixed' then ad_total_wholesale_cost_counter else 0 end) uds_total_moc_nat_off_net_fixed_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Host' then ad_total_wholesale_cost_counter else 0 end) uds_total_moc_nat_offnet_host_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Others' then ad_total_wholesale_cost_counter else 0 end) uds_total_moc_nat_offnet_others_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' then ad_total_wholesale_cost_counter else 0 end) uds_total_moc_intl_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'India' then ad_total_wholesale_cost_counter else 0 end) uds_total_moc_india_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Philippines' then ad_total_wholesale_cost_counter else 0 end) uds_total_moc_philippines_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Yemen' then ad_total_wholesale_cost_counter else 0 end) uds_total_moc_yemen_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Pakistan' then ad_total_wholesale_cost_counter else 0 end) uds_total_moc_pakistan_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Bangladesh' then ad_total_wholesale_cost_counter else 0 end) uds_total_moc_bangladesh_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Nepal' then ad_total_wholesale_cost_counter else 0 end) uds_total_moc_nepal_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Egypt' then ad_total_wholesale_cost_counter else 0 end) uds_total_moc_egypt_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'UAE' then ad_total_wholesale_cost_counter else 0 end) uds_total_moc_uae_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Sudan' then ad_total_wholesale_cost_counter else 0 end) uds_total_moc_sudan_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country not in ('India', 'Philippines' , 'Yemen' , 'Pakistan' , 'Bangladesh' , 'Nepal' , 'Egypt' , 'UAE' , 'Sudan') then ad_total_wholesale_cost_counter else 0 end) uds_total_moc_intl_others_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'Roaming' then ad_total_wholesale_cost_counter else 0 end) uds_total_moc_roam_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MTC' then ad_total_wholesale_cost_counter else 0 end) uds_total_mtc_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--pagy wholesale cost&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' then ad_total_wholesale_cost_payg else 0 end) uds_total_payg_voice_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_subtype = 'Expired Credit' then ad_total_wholesale_cost_payg else 0 end) uds_total_payg_voice_expired_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' then ad_total_wholesale_cost_payg else 0 end) uds_total_payg_moc_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' then ad_total_wholesale_cost_payg else 0 end) uds_total_payg_moc_nat_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'On-Net Mobile' then ad_total_wholesale_cost_payg else 0 end) uds_total_payg_moc_nat_onnet_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Mobile' then ad_total_wholesale_cost_payg else 0 end) uds_total_payg_moc_nat_offnet_mobile_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Fixed' then ad_total_wholesale_cost_payg else 0 end) uds_total_payg_moc_nat_off_net_fixed_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Host' then ad_total_wholesale_cost_payg else 0 end) uds_total_payg_moc_nat_offnet_host_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Others' then ad_total_wholesale_cost_payg else 0 end) uds_total_payg_moc_nat_offnet_others_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' then ad_total_wholesale_cost_payg else 0 end) uds_total_payg_moc_intl_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'India' then ad_total_wholesale_cost_payg else 0 end) uds_total_payg_moc_india_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Philippines' then ad_total_wholesale_cost_payg else 0 end) uds_total_payg_moc_philippines_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Yemen' then ad_total_wholesale_cost_payg else 0 end) uds_total_payg_moc_yemen_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Pakistan' then ad_total_wholesale_cost_payg else 0 end) uds_total_payg_moc_pakistan_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Bangladesh' then ad_total_wholesale_cost_payg else 0 end) uds_total_payg_moc_bangladesh_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Nepal' then ad_total_wholesale_cost_payg else 0 end) uds_total_payg_moc_nepal_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Egypt' then ad_total_wholesale_cost_payg else 0 end) uds_total_payg_moc_egypt_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'UAE' then ad_total_wholesale_cost_payg else 0 end) uds_total_payg_moc_uae_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Sudan' then ad_total_wholesale_cost_payg else 0 end) uds_total_payg_moc_sudan_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country not in ('India', 'Philippines' , 'Yemen' , 'Pakistan' , 'Bangladesh' , 'Nepal' , 'Egypt' , 'UAE' , 'Sudan') then ad_total_wholesale_cost_payg else 0 end) uds_total_payg_moc_intl_others_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'Roaming' then ad_total_wholesale_cost_payg else 0 end) uds_total_payg_moc_roam_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MTC' then ad_total_wholesale_cost_payg else 0 end) uds_total_payg_mtc_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--bundle wholesale cost&#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' then ad_total_wholesale_cost_counter else 0 end) uds_total_usage_bundle_voice_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_subtype = 'Expired Credit' then ad_total_wholesale_cost_counter else 0 end) uds_total_usage_bundle_voice_expired_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' then ad_total_wholesale_cost_counter else 0 end) uds_total_usage_bundle_moc_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' then ad_total_wholesale_cost_counter else 0 end) uds_total_usage_bundle_moc_nat_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'On-Net Mobile' then ad_total_wholesale_cost_counter else 0 end) uds_total_usage_bundle_moc_nat_onnet_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Mobile' then ad_total_wholesale_cost_counter else 0 end) uds_total_usage_bundle_moc_nat_offnet_mobile_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Fixed' then ad_total_wholesale_cost_counter else 0 end) uds_total_usage_bundle_moc_nat_off_net_fixed_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Host' then ad_total_wholesale_cost_counter else 0 end) uds_total_usage_bundle_moc_nat_offnet_host_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Others' then ad_total_wholesale_cost_counter else 0 end) uds_total_usage_bundle_moc_nat_offnet_others_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' then ad_total_wholesale_cost_counter else 0 end) uds_total_usage_bundle_moc_intl_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'India' then ad_total_wholesale_cost_counter else 0 end) uds_total_usage_bundle_moc_india_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Philippines' then ad_total_wholesale_cost_counter else 0 end) uds_total_usage_bundle_moc_philippines_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Yemen' then ad_total_wholesale_cost_counter else 0 end) uds_total_usage_bundle_moc_yemen_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Pakistan' then ad_total_wholesale_cost_counter else 0 end) uds_total_usage_bundle_moc_pakistan_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Bangladesh' then ad_total_wholesale_cost_counter else 0 end) uds_total_usage_bundle_moc_bangladesh_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Nepal' then ad_total_wholesale_cost_counter else 0 end) uds_total_usage_bundle_moc_nepal_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Egypt' then ad_total_wholesale_cost_counter else 0 end) uds_total_usage_bundle_moc_egypt_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'UAE' then ad_total_wholesale_cost_counter else 0 end) uds_total_usage_bundle_moc_uae_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country = 'Sudan' then ad_total_wholesale_cost_counter else 0 end) uds_total_usage_bundle_moc_sudan_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'International' and traffic_country not in ('India', 'Philippines' , 'Yemen' , 'Pakistan' , 'Bangladesh' , 'Nepal' , 'Egypt' , 'UAE' , 'Sudan') then ad_total_wholesale_cost_counter else 0 end) uds_total_usage_bundle_moc_intl_others_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and traffic_national_international = 'Roaming' then ad_total_wholesale_cost_counter else 0 end) uds_total_usage_bundle_moc_roam_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MTC' then ad_total_wholesale_cost_counter else 0 end) uds_total_usage_bundle_mtc_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--duration&#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and ad_terminationreason in (0, 6, 7, 8, 10) then ad_total_duration / 60000 else 0 end) uds_total_voice_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) then ad_total_duration / 60000 else 0 end) uds_total_moc_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'National' then ad_total_duration / 60000 else 0 end) uds_total_moc_nat_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'National' and traffic_onnet_offnet = 'On-Net Mobile' then ad_total_duration / 60000 else 0 end) uds_total_moc_nat_onnet_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Mobile' then ad_total_duration / 60000 else 0 end) uds_total_moc_nat_offnet_mobile_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Fixed' then ad_total_duration / 60000 else 0 end) uds_total_moc_nat_off_net_fixed_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Host' then ad_total_duration / 60000 else 0 end) uds_total_moc_nat_offnet_host_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Others' then ad_total_duration / 60000 else 0 end) uds_total_moc_nat_offnet_others_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' then ad_total_duration / 60000 else 0 end) uds_total_moc_intl_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' and traffic_country = 'India' then ad_total_duration / 60000 else 0 end) uds_total_moc_india_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' and traffic_country = 'Philippines' then ad_total_duration / 60000 else 0 end) uds_total_moc_philippines_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' and traffic_country = 'Yemen' then ad_total_duration / 60000 else 0 end) uds_total_moc_yemen_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' and traffic_country = 'Pakistan' then ad_total_duration / 60000 else 0 end) uds_total_moc_pakistan_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' and traffic_country = 'Bangladesh' then ad_total_duration / 60000 else 0 end) uds_total_moc_bangladesh_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' and traffic_country = 'Nepal' then ad_total_duration / 60000 else 0 end) uds_total_moc_nepal_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' and traffic_country = 'Egypt' then ad_total_duration / 60000 else 0 end) uds_total_moc_egypt_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' and traffic_country = 'UAE' then ad_total_duration / 60000 else 0 end) uds_total_moc_uae_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' and traffic_country = 'Sudan' then ad_total_duration / 60000 else 0 end) uds_total_moc_sudan_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' and traffic_country not in ('India', 'Philippines' , 'Yemen' , 'Pakistan' , 'Bangladesh' , 'Nepal' , 'Egypt' , 'UAE' , 'Sudan') then ad_total_duration / 60000 else 0 end) uds_total_moc_intl_others_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'Roaming' then ad_total_duration / 60000 else 0 end) uds_total_moc_roam_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MTC' and ad_terminationreason in (0, 6, 7, 8, 10) then ad_total_duration / 60000 else 0 end) uds_total_mtc_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--duration payg&#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and ad_terminationreason in (0, 6, 7, 8, 10) then ad_total_payg_time / 60000 else 0 end) uds_total_payg_voice_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) then ad_total_payg_time / 60000 else 0 end) uds_total_payg_moc_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'National' then ad_total_payg_time / 60000 else 0 end) uds_total_payg_moc_nat_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'National' and traffic_onnet_offnet = 'On-Net Mobile' then ad_total_payg_time / 60000 else 0 end) uds_total_payg_moc_nat_onnet_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Mobile' then ad_total_payg_time / 60000 else 0 end) uds_total_payg_moc_nat_offnet_mobile_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Fixed' then ad_total_payg_time / 60000 else 0 end) uds_total_payg_moc_nat_off_net_fixed_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Host' then ad_total_payg_time / 60000 else 0 end) uds_total_payg_moc_nat_offnet_host_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Others' then ad_total_payg_time / 60000 else 0 end) uds_total_payg_moc_nat_offnet_others_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' then ad_total_payg_time / 60000 else 0 end) uds_total_payg_moc_intl_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' and traffic_country = 'India' then ad_total_payg_time / 60000 else 0 end) uds_total_payg_moc_india_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' and traffic_country = 'Philippines' then ad_total_payg_time / 60000 else 0 end) uds_total_payg_moc_philippines_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' and traffic_country = 'Yemen' then ad_total_payg_time / 60000 else 0 end) uds_total_payg_moc_yemen_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' and traffic_country = 'Pakistan' then ad_total_payg_time / 60000 else 0 end) uds_total_payg_moc_pakistan_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' and traffic_country = 'Bangladesh' then ad_total_payg_time / 60000 else 0 end) uds_total_payg_moc_bangladesh_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' and traffic_country = 'Nepal' then ad_total_payg_time / 60000 else 0 end) uds_total_payg_moc_nepal_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' and traffic_country = 'Egypt' then ad_total_payg_time / 60000 else 0 end) uds_total_payg_moc_egypt_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' and traffic_country = 'UAE' then ad_total_payg_time / 60000 else 0 end) uds_total_payg_moc_uae_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' and traffic_country = 'Sudan' then ad_total_payg_time / 60000 else 0 end) uds_total_payg_moc_sudan_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' and traffic_country not in ('India', 'Philippines' , 'Yemen' , 'Pakistan' , 'Bangladesh' , 'Nepal' , 'Egypt' , 'UAE' , 'Sudan') then ad_total_payg_time / 60000 else 0 end) uds_total_payg_moc_intl_others_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'Roaming' then ad_total_payg_time / 60000 else 0 end) uds_total_payg_moc_roam_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MTC' and ad_terminationreason in (0, 6, 7, 8, 10) then ad_total_payg_time / 60000 else 0 end) uds_total_payg_mtc_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--duration bundle&#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and ad_terminationreason in (0, 6, 7, 8, 10) then ad_total_counter_time / 60000 else 0 end) uds_total_usage_bundle_voice_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) then ad_total_counter_time / 60000 else 0 end) uds_total_usage_bundle_moc_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'National' then ad_total_counter_time / 60000 else 0 end) uds_total_usage_bundle_moc_nat_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'National' and traffic_onnet_offnet = 'On-Net Mobile' then ad_total_counter_time / 60000 else 0 end) uds_total_usage_bundle_moc_nat_onnet_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Mobile' then ad_total_counter_time / 60000 else 0 end) uds_total_usage_bundle_moc_nat_offnet_mobile_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Fixed' then ad_total_counter_time / 60000 else 0 end) uds_total_usage_bundle_moc_nat_off_net_fixed_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Host' then ad_total_counter_time / 60000 else 0 end) uds_total_usage_bundle_moc_nat_offnet_host_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Others' then ad_total_counter_time / 60000 else 0 end) uds_total_usage_bundle_moc_nat_offnet_others_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' then ad_total_counter_time / 60000 else 0 end) uds_total_usage_bundle_moc_intl_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' and traffic_country = 'India' then ad_total_counter_time / 60000 else 0 end) uds_total_usage_bundle_moc_india_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' and traffic_country = 'Philippines' then ad_total_counter_time / 60000 else 0 end) uds_total_usage_bundle_moc_philippines_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' and traffic_country = 'Yemen' then ad_total_counter_time / 60000 else 0 end) uds_total_usage_bundle_moc_yemen_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' and traffic_country = 'Pakistan' then ad_total_counter_time / 60000 else 0 end) uds_total_usage_bundle_moc_pakistan_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' and traffic_country = 'Bangladesh' then ad_total_counter_time / 60000 else 0 end) uds_total_usage_bundle_moc_bangladesh_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' and traffic_country = 'Nepal' then ad_total_counter_time / 60000 else 0 end) uds_total_usage_bundle_moc_nepal_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' and traffic_country = 'Egypt' then ad_total_counter_time / 60000 else 0 end) uds_total_usage_bundle_moc_egypt_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' and traffic_country = 'UAE' then ad_total_counter_time / 60000 else 0 end) uds_total_usage_bundle_moc_uae_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' and traffic_country = 'Sudan' then ad_total_counter_time / 60000 else 0 end) uds_total_usage_bundle_moc_sudan_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'International' and traffic_country not in ('India', 'Philippines' , 'Yemen' , 'Pakistan' , 'Bangladesh' , 'Nepal' , 'Egypt' , 'UAE' , 'Sudan') then ad_total_counter_time / 60000 else 0 end) uds_total_usage_bundle_moc_intl_others_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MOC' and ad_terminationreason in (0, 6, 7, 8, 10) and traffic_national_international = 'Roaming' then ad_total_counter_time / 60000 else 0 end) uds_total_usage_bundle_moc_roam_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'MTC' and ad_terminationreason in (0, 6, 7, 8, 10) then ad_total_counter_time / 60000 else 0 end) uds_total_usage_bundle_mtc_mins,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--SMS&#13;&#10;&#9;&#9;&#9;&#9;&#9;--Count&#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' then ad_total_quantity else 0 end) as uds_total_sms_count,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' then ad_total_quantity else 0 end) as uds_total_sms_nat_count,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'On-Net Mobile' then ad_total_quantity else 0 end) as uds_total_sms_nat_onnet_count,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Mobile' then ad_total_quantity else 0 end) as uds_total_sms_nat_offnet_mobile_count,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Host' then ad_total_quantity else 0 end) as uds_total_sms_nat_offnet_host_count,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Others' then ad_total_quantity else 0 end) as uds_total_sms_nat_offnet_others_count,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'International' then ad_total_quantity else 0 end) as uds_total_sms_intl_count,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'Roaming' then ad_total_quantity else 0 end) as uds_total_sms_roam_count,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--payg count&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' then ad_total_payg_integer else 0 end) as uds_total_payg_sms_count,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' then ad_total_payg_integer else 0 end) as uds_total_payg_sms_nat_count,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'On-Net Mobile' then ad_total_payg_integer else 0 end) as uds_total_payg_sms_nat_onnet_count,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Mobile' then ad_total_payg_integer else 0 end) as uds_total_payg_sms_nat_offnet_mobile_count,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Host' then ad_total_payg_integer else 0 end) as uds_total_payg_sms_nat_offnet_host_count,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Others' then ad_total_payg_integer else 0 end) as uds_total_payg_sms_nat_offnet_others_count,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'International' then ad_total_payg_integer else 0 end) as uds_total_payg_sms_intl_count,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'Roaming' then ad_total_payg_integer else 0 end) as uds_total_payg_sms_roam_count,&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- counter count&#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' then ad_total_counter_integer else 0 end) as uds_total_usage_bundle_sms_count,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' then ad_total_counter_integer else 0 end) as uds_total_usage_bundle_sms_nat_count,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'On-Net Mobile' then ad_total_counter_integer else 0 end) as uds_total_usage_bundle_sms_nat_onnet_count,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Mobile' then ad_total_counter_integer else 0 end) as uds_total_usage_bundle_sms_nat_offnet_mobile_count,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Host' then ad_total_counter_integer else 0 end) as uds_total_usage_bundle_sms_nat_offnet_host_count,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Others' then ad_total_counter_integer else 0 end) as uds_total_usage_bundle_sms_nat_offnet_others_count,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'International' then ad_total_counter_integer else 0 end) as uds_total_usage_bundle_sms_intl_count,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'Roaming' then ad_total_counter_integer else 0 end) as uds_total_usage_bundle_sms_roam_count,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--gross revenue&#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' then ad_total_gross_revenue else 0 end) as uds_total_gross_sms_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' then ad_total_gross_revenue else 0 end) as uds_total_gross_sms_nat_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'On-Net Mobile' then ad_total_gross_revenue else 0 end) as uds_total_gross_sms_nat_onnet_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Mobile' then ad_total_gross_revenue else 0 end) as uds_total_gross_sms_nat_offnet_mobile_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Host' then ad_total_gross_revenue else 0 end) as uds_total_gross_sms_nat_offnet_host_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Others' then ad_total_gross_revenue else 0 end) as uds_total_gross_sms_nat_offnet_others_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'International' then ad_total_gross_revenue else 0 end) as uds_total_gross_sms_intl_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'Roaming' then ad_total_gross_revenue else 0 end) as uds_total_gross_sms_roam_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--net revenue&#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' then ad_total_net_revenue else 0 end) as uds_total_net_sms_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' then ad_total_net_revenue else 0 end) as uds_total_net_sms_nat_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'On-Net Mobile' then ad_total_net_revenue else 0 end) as uds_total_net_sms_nat_onnet_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Mobile' then ad_total_net_revenue else 0 end) as uds_total_net_sms_nat_offnet_mobile_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Host' then ad_total_net_revenue else 0 end) as uds_total_net_sms_nat_offnet_host_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Others' then ad_total_net_revenue else 0 end) as uds_total_net_sms_nat_offnet_others_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'International' then ad_total_net_revenue else 0 end) as uds_total_net_sms_intl_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'Roaming' then ad_total_net_revenue else 0 end) as uds_total_net_sms_roam_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--payg gross&#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' then ad_total_gross_revenue_payg else 0 end) as uds_total_gross_payg_sms_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' then ad_total_gross_revenue_payg else 0 end) as uds_total_gross_payg_sms_nat_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'On-Net Mobile' then ad_total_gross_revenue_payg else 0 end) as uds_total_gross_payg_sms_nat_onnet_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Mobile' then ad_total_gross_revenue_payg else 0 end) as uds_total_gross_payg_sms_nat_offnet_mobile_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Host' then ad_total_gross_revenue_payg else 0 end) as uds_total_gross_payg_sms_nat_offnet_host_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Others' then ad_total_gross_revenue_payg else 0 end) as uds_total_gross_payg_sms_nat_offnet_others_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'International' then ad_total_gross_revenue_payg else 0 end) as uds_total_gross_payg_sms_intl_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'Roaming' then ad_total_gross_revenue_payg else 0 end) as uds_total_gross_payg_sms_roam_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--bundle gross&#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' then ad_total_gross_revenue_usage_bundle else 0 end) as uds_total_gross_usage_bundle_sms_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' then ad_total_gross_revenue_usage_bundle else 0 end) as uds_total_gross_usage_bundle_sms_nat_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'On-Net Mobile' then ad_total_gross_revenue_usage_bundle else 0 end) as uds_total_gross_usage_bundle_sms_nat_onnet_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Mobile' then ad_total_gross_revenue_usage_bundle else 0 end) as uds_total_gross_usage_bundle_sms_nat_offnet_mobile_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Host' then ad_total_gross_revenue_usage_bundle else 0 end) as uds_total_gross_usage_bundle_sms_nat_offnet_host_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Others' then ad_total_gross_revenue_usage_bundle else 0 end) as uds_total_gross_usage_bundle_sms_nat_offnet_others_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'International' then ad_total_gross_revenue_usage_bundle else 0 end) as uds_total_gross_usage_bundle_sms_intl_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'Roaming' then ad_total_gross_revenue_usage_bundle else 0 end) as uds_total_gross_usage_bundle_sms_roam_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--payg net&#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' then ad_total_net_revenue_payg else 0 end) as uds_total_net_payg_sms_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' then ad_total_net_revenue_payg else 0 end) as uds_total_net_payg_sms_nat_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'On-Net Mobile' then ad_total_net_revenue_payg else 0 end) as uds_total_net_payg_sms_nat_onnet_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Mobile' then ad_total_net_revenue_payg else 0 end) as uds_total_net_payg_sms_nat_offnet_mobile_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Host' then ad_total_net_revenue_payg else 0 end) as uds_total_net_payg_sms_nat_offnet_host_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Others' then ad_total_net_revenue_payg else 0 end) as uds_total_net_payg_sms_nat_offnet_others_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'International' then ad_total_net_revenue_payg else 0 end) as uds_total_net_payg_sms_intl_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'Roaming' then ad_total_net_revenue_payg else 0 end) as uds_total_net_payg_sms_roam_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--bundle net&#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' then ad_total_net_revenue_usage_bundle else 0 end) as uds_total_net_uds_total_net_payg_sms_revenue_sms_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' then ad_total_net_revenue_usage_bundle else 0 end) as uds_total_net_usage_bundle_sms_nat_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'On-Net Mobile' then ad_total_net_revenue_usage_bundle else 0 end) as uds_total_net_usage_bundle_sms_nat_onnet_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Mobile' then ad_total_net_revenue_usage_bundle else 0 end) as uds_total_net_usage_bundle_sms_nat_offnet_mobile_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Host' then ad_total_net_revenue_usage_bundle else 0 end) as uds_total_net_usage_bundle_sms_nat_offnet_host_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Others' then ad_total_net_revenue_usage_bundle else 0 end) as uds_total_net_usage_bundle_sms_nat_offnet_others_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'International' then ad_total_net_revenue_usage_bundle else 0 end) as uds_total_net_usage_bundle_sms_intl_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'Roaming' then ad_total_net_revenue_usage_bundle else 0 end) as uds_total_net_usage_bundle_sms_roam_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--wholesale cost &#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' then ad_total_wholesale_cost else 0 end) as uds_total_sms_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' then ad_total_wholesale_cost else 0 end) as uds_total_sms_nat_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'On-Net Mobile' then ad_total_wholesale_cost else 0 end) as uds_total_sms_nat_onnet_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Mobile' then ad_total_wholesale_cost else 0 end) as uds_total_sms_nat_offnet_mobile_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Host' then ad_total_wholesale_cost else 0 end) as uds_total_sms_nat_offnet_host_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Others' then ad_total_wholesale_cost else 0 end) as uds_total_sms_nat_offnet_others_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'International' then ad_total_wholesale_cost else 0 end) as uds_total_sms_intl_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'Roaming' then ad_total_wholesale_cost else 0 end) as uds_total_sms_roam_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--payg wholesale cost&#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' then ad_total_wholesale_cost_payg else 0 end) as uds_total_payg_sms_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' then ad_total_wholesale_cost_payg else 0 end) as uds_total_payg_sms_nat_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'On-Net Mobile' then ad_total_wholesale_cost_payg else 0 end) as uds_total_payg_sms_nat_onnet_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Mobile' then ad_total_wholesale_cost_payg else 0 end) as uds_total_payg_sms_nat_offnet_mobile_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Host' then ad_total_wholesale_cost_payg else 0 end) as uds_total_payg_sms_nat_offnet_host_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Others' then ad_total_wholesale_cost_payg else 0 end) as uds_total_payg_sms_nat_offnet_others_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'International' then ad_total_wholesale_cost_payg else 0 end) as uds_total_payg_sms_intl_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'Roaming' then ad_total_wholesale_cost_payg else 0 end) as uds_total_payg_sms_roam_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--bundle wholesale cost &#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' then ad_total_wholesale_cost_counter else 0 end) as uds_total_usage_bundle_sms_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' then ad_total_wholesale_cost_counter else 0 end) as uds_total_usage_bundle_sms_nat_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'On-Net Mobile' then ad_total_wholesale_cost_counter else 0 end) as uds_total_usage_bundle_sms_nat_onnet_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Mobile' then ad_total_wholesale_cost_counter else 0 end) as uds_total_usage_bundle_sms_nat_offnet_mobile_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Host' then ad_total_wholesale_cost_counter else 0 end) as uds_total_usage_bundle_sms_nat_offnet_host_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'National' and traffic_onnet_offnet = 'Off-Net Others' then ad_total_wholesale_cost_counter else 0 end) as uds_total_usage_bundle_sms_nat_offnet_others_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'International' then ad_total_wholesale_cost_counter else 0 end) as uds_total_usage_bundle_sms_intl_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'SMS' and traffic_national_international = 'Roaming' then ad_total_wholesale_cost_counter else 0 end) as uds_total_usage_bundle_sms_roam_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--Data&#13;&#10;&#9;&#9;&#9;&#9;&#9;--Volume&#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' then ad_total_used_quota / 1024 / 1024 else 0 end) as uds_total_data_volume_mb,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' and traffic_national_international = 'National' then ad_total_used_quota / 1024 / 1024 else 0 end) as uds_total_data_nat_volume_mb,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' and traffic_national_international = 'Roaming' then ad_total_used_quota / 1024 / 1024 else 0 end) as uds_total_data_roam_volume_mb,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--payg volume&#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' then ad_total_payg_data_volume / 1024 / 1024 else 0 end) as uds_total_payg_data_volume_mb,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' and traffic_national_international = 'National' then ad_total_payg_data_volume / 1024 / 1024 else 0 end) as uds_total_payg_data_nat_volume_mb,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' and traffic_national_international = 'Roaming' then ad_total_payg_data_volume / 1024 / 1024 else 0 end) as uds_total_payg_data_roam_volume_mb,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--counter volume&#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' then ad_total_counter_data_volume / 1024 / 1024 else 0 end) as uds_total_usage_bundle_data_volume_mb,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' and traffic_national_international = 'National' then ad_total_counter_data_volume / 1024 / 1024 else 0 end) as uds_total_usage_bundle_data_nat_volume_mb,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' and traffic_national_international = 'Roaming' then ad_total_counter_data_volume / 1024 / 1024 else 0 end) as uds_total_usage_bundle_data_roam_volume_mb,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--gross&#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' then ad_total_gross_revenue else 0 end) as uds_total_gross_data_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' and traffic_national_international = 'National' then ad_total_gross_revenue else 0 end) as uds_total_gross_data_nat_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' and traffic_national_international = 'Roaming' then ad_total_gross_revenue else 0 end) as uds_total_gross_data_roam_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--net&#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' then ad_total_net_revenue else 0 end) as uds_total_net_data_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' and traffic_national_international = 'National' then ad_total_net_revenue else 0 end) as uds_total_net_data_nat_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' and traffic_national_international = 'Roaming' then ad_total_net_revenue else 0 end) as uds_total_net_data_roam_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--payg gross&#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' then ad_total_gross_revenue_payg else 0 end) as uds_total_gross_data_payg_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' and traffic_national_international = 'National' then ad_total_gross_revenue_payg else 0 end) as uds_total_gross_data_nat_payg_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' and traffic_national_international = 'Roaming' then ad_total_gross_revenue_payg else 0 end) as uds_total_gross_data_roam_payg_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--payg net&#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' then ad_total_net_revenue_payg else 0 end) as uds_total_net_data_payg_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' and traffic_national_international = 'National' then ad_total_net_revenue_payg else 0 end) as uds_total_net_data_nat_payg_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' and traffic_national_international = 'Roaming' then ad_total_net_revenue_payg else 0 end) as uds_total_net_data_roam_payg_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--bundle gross&#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' then ad_total_gross_revenue_usage_bundle else 0 end) as uds_total_gross_data_usage_bundle_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' and traffic_national_international = 'National' then ad_total_gross_revenue_usage_bundle else 0 end) as uds_total_gross_data_nat_usage_bundle_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' and traffic_national_international = 'Roaming' then ad_total_gross_revenue_usage_bundle else 0 end) as uds_total_gross_data_roam_usage_bundle_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--bundle net&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' then ad_total_net_revenue_usage_bundle else 0 end) as uds_total_net_data_usage_bundle_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' and traffic_national_international = 'National' then ad_total_net_revenue_usage_bundle else 0 end) as uds_total_net_data_nat_usage_bundle_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' and traffic_national_international = 'Roaming' then ad_total_net_revenue_usage_bundle else 0 end) as uds_total_net_data_roam_usage_bundle_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--wholesale cost &#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' then ad_total_wholesale_cost else 0 end) as uds_total_data_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' and traffic_national_international = 'National' then ad_total_wholesale_cost else 0 end) as uds_total_data_nat_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' and traffic_national_international = 'Roaming' then ad_total_wholesale_cost else 0 end) as uds_total_data_roam_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--payg wholesale &#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' then ad_total_wholesale_cost_payg else 0 end) as uds_total_data_payg_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' and traffic_national_international = 'National' then ad_total_wholesale_cost_payg else 0 end) as uds_total_data_nat_payg_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' and traffic_national_international = 'Roaming' then ad_total_wholesale_cost_payg else 0 end) as uds_total_data_roam_payg_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--bundle wholesale&#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' then ad_total_wholesale_cost_counter else 0 end) as uds_total_data_usage_bundle_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' and traffic_national_international = 'National' then ad_total_wholesale_cost_counter else 0 end) as uds_total_data_nat_usage_bundle_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' and traffic_national_international = 'Roaming' then ad_total_wholesale_cost_counter else 0 end) as uds_total_data_roam_usage_bundle_wholesale_cost,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--Recharge&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Recharge' then ad_total_quantity else 0 end) uds_total_recharge_count,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Recharge' then ad_total_adjustment_amount else 0 end) as uds_total_recharge_amount,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Recharge' and service_subtype = 'Credit Card' then ad_total_quantity else 0 end) uds_total_recharge_credit_card_count,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Recharge' and service_subtype = 'Credit Card' then ad_total_adjustment_amount else 0 end) as uds_total_recharge_credit_card_amount,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Recharge' and service_subtype = 'Voucher' then ad_total_quantity else 0 end) uds_total_recharge_voucher_count,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Recharge' and service_subtype = 'Voucher' then ad_total_adjustment_amount else 0 end) as uds_total_recharge_voucher_amount,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Recharge' and service_subtype = 'BCRM/Sadad' then ad_total_quantity else 0 end) uds_total_recharge_bcrm_sadad_count,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Recharge' and service_subtype = 'BCRM/Sadad' then ad_total_adjustment_amount else 0 end) as uds_total_recharge_bcrm_sadad_amount,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Recharge' and service_subtype = 'eload' then ad_total_quantity else 0 end) uds_total_recharge_eload_count,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Recharge' and service_subtype = 'eload' then ad_total_adjustment_amount else 0 end) as uds_total_recharge_eload_amount,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Recharge' and service_subtype = 'Pay_in_Store' then ad_total_quantity else 0 end) uds_total_recharge_pay_in_store_count,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Recharge' and service_subtype = 'Pay_in_Store' then ad_total_adjustment_amount else 0 end) as uds_total_recharge_pay_in_store_amount,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--Bundles&#13;&#10;&#9;&#9;&#9;&#9;&#9;--gross&#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' and service_type = 'Data Bundle' and service_subtype &lt;&gt; 'Expired Credit' then ad_total_gross_revenue_upfront_bundle else 0 end) uds_total_gross_upfront_data_bundle_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'Voice Bundle' and service_subtype &lt;&gt; 'Expired Credit' then ad_total_gross_revenue_upfront_bundle else 0 end) uds_total_gross_upfront_voice_bundle_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;--net&#13;&#10; &#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Data' and service_type = 'Data Bundle' and service_subtype &lt;&gt; 'Expired Credit' then ad_total_net_revenue_upfront_bundle else 0 end) uds_total_net_upfront_data_bundle_revenue,&#13;&#10;&#9;&#9;&#9;&#9;&#9;sum(case when service_group = 'Voice' and service_type = 'Voice Bundle' and service_subtype &lt;&gt; 'Expired Credit' then ad_total_net_revenue_upfront_bundle else 0 end) uds_total_net_upfront_voice_bundle_revenue&#13;&#10;&#9;&#9;&#9;&#9;from&#13;&#10;&#9;&#9;&#9;&#9;&#9;( (&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;select *&#13;&#10;&#9;&#9;&#9;&#9;&#9;from&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;prod.nobill_aggr_ws_cost&#13;&#10;&#9;&#9;&#9;&#9;&#9;where&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;ad_date = '&quot;+context.vLoadDate+&quot;'&#13;&#10;&#9;&#9;&#9;&#9;&#9;order by&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;ad_transaction_id ) a&#13;&#10;&#9;&#9;&#9;&#9;inner join (&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;select *&#13;&#10;&#9;&#9;&#9;&#9;&#9;from&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;prod.nobill_dim_transaction_key&#13;&#10;&#9;&#9;&#9;&#9;&#9;order by&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;transaction_id )b on&#13;&#10;&#9;&#9;&#9;&#9;&#9;a.ad_transaction_id = b.transaction_id ) z&#13;&#10;&#9;&#9;&#9;&#9;group by&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_accountnum,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_date )x)xx&quot;"/>
    <elementParameter field="CLOSED_LIST" name="USE_NB_LINE" value="NB_LINE_INSERTED"/>
    <elementParameter field="LABEL" name="USE_NB_LINE_NOTE" value="* Only used if the query is an insert, an update or a delete."/>
    <elementParameter field="CHECK" name="DIE_ON_ERROR" value="true"/>
    <elementParameter field="TEXT" name="PROPERTIES" value="&quot;&quot;"/>
    <elementParameter field="CHECK" name="PROPAGATE_RECORD_SET" value="false"/>
    <elementParameter field="COLUMN_LIST" name="RECORD_SET_COLUMN" show="false" value=""/>
    <elementParameter field="CHECK" name="USE_PREPAREDSTATEMENT" value="false"/>
    <elementParameter field="TABLE" name="SET_PREPAREDSTATEMENT_PARAMETERS" show="false"/>
    <elementParameter field="TEXT" name="ENCODING" show="false" value="&quot;ISO-8859-15&quot;"/>
    <elementParameter field="TEXT" name="COMMIT_EVERY" value="10000"/>
    <elementParameter field="TEXT" name="LABEL" value="calculate subscriber aggregates"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
    <metadata connector="FLOW" label="nobill_tx_account_history" name="tDBRow_2"/>
    <metadata connector="REJECT" label="nobill_tx_account_history" name="REJECT">
      <column defaultValue="" key="false" length="255" name="errorCode" nullable="true" originalLength="-1" precision="0" sourceType="" type="id_String" usefulColumn="true"/>
      <column defaultValue="" key="false" length="255" name="errorMessage" nullable="true" originalLength="-1" precision="0" sourceType="" type="id_String" usefulColumn="true"/>
    </metadata>
  </node>
  <node componentName="tJobLog" componentVersion="0.101" offsetLabelX="0" offsetLabelY="0" posX="800" posY="896">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tJobLog_1"/>
    <elementParameter field="CHECK" name="ACTIVATE" value="false"/>
    <elementParameter field="RADIO" name="DEV_LOG" value="true"/>
    <elementParameter field="RADIO" name="BUSINESS_LOG" value="false"/>
    <elementParameter field="TEXT" name="MESSAGE" value="&quot;Deleted #Records from &quot;+context.target_tablename +&quot; : &quot;+((Integer)globalMap.get(&quot;tDBRow_1_NB_LINE_DELETED&quot;))+&quot; and &quot;+((Integer)globalMap.get(&quot;tDBRow_4_NB_LINE_DELETED&quot;))+&quot; from subsdaily details table for the date : &quot;+context.vLoadDate +&quot;. Now calculating subscriber aggregates&quot;"/>
    <elementParameter field="CLOSED_LIST" name="PRIORITY" value="20000"/>
    <elementParameter field="TEXT" name="LABEL" value="logs info"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
    <metadata connector="FLOW" name="tJobLog_1"/>
  </node>
  <node componentName="tJobLog" componentVersion="0.101" offsetLabelX="0" offsetLabelY="0" posX="1184" posY="896">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tJobLog_2"/>
    <elementParameter field="CHECK" name="ACTIVATE" value="false"/>
    <elementParameter field="RADIO" name="DEV_LOG" value="true"/>
    <elementParameter field="RADIO" name="BUSINESS_LOG" value="false"/>
    <elementParameter field="TEXT" name="MESSAGE" value="&quot;Inserted #Records into &quot;+context.target_tablename +&quot; : &quot;+((Integer)globalMap.get(&quot;tDBRow_2_NB_LINE_INSERTED&quot;))+&quot;. Loading subscriber aggregates with lifetime recharge value.&quot;"/>
    <elementParameter field="CLOSED_LIST" name="PRIORITY" value="20000"/>
    <elementParameter field="TEXT" name="LABEL" value="logs info"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
    <metadata connector="FLOW" name="tJobLog_2"/>
  </node>
  <node componentName="tVerticaRow" componentVersion="0.102" offsetLabelX="0" offsetLabelY="0" posX="1504" posY="736">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tDBRow_3"/>
    <elementParameter field="CHECK" name="ACTIVATE" value="false"/>
    <elementParameter field="TECHNICAL" name="PROPERTY:PROPERTY_TYPE" value="REPOSITORY"/>
    <elementParameter field="TECHNICAL" name="PROPERTY:REPOSITORY_PROPERTY_TYPE" show="false" value="_5iHVAEWDEemVVo7G2ZId6g"/>
    <elementParameter field="CLOSED_LIST" name="DB_VERSION" value="VERTICA_9_0"/>
    <elementParameter field="CHECK" name="USE_EXISTING_CONNECTION" value="false"/>
    <elementParameter field="COMPONENT_LIST" name="CONNECTION" show="false" value=""/>
    <elementParameter field="TEXT" name="HOST" value="&quot;10.4.32.25&quot;"/>
    <elementParameter field="TEXT" name="PORT" value="&quot;5433&quot;"/>
    <elementParameter field="TEXT" name="DBNAME" value="&quot;ksa_db_prod&quot;"/>
    <elementParameter field="TEXT" name="SCHEMA_DB" value="&quot;prod&quot;"/>
    <elementParameter field="TEXT" name="TYPE" show="false" value="VERTICA"/>
    <elementParameter field="TEXT" name="USER" value="&quot;talend&quot;"/>
    <elementParameter field="PASSWORD" name="PASS" value="enc:system.encryption.key.v1:RQrQVO1l6yx8MamDF/QkoZRwbaXZgm0hRFeOx25izIr9W0WcMgpQlg=="/>
    <elementParameter field="TECHNICAL" name="SCHEMA_REJECT:SCHEMA_TYPE" show="false" value="REPOSITORY"/>
    <elementParameter field="TECHNICAL" name="SCHEMA_REJECT:REPOSITORY_SCHEMA_TYPE" show="false" value="_5iHVAEWDEemVVo7G2ZId6g - "/>
    <elementParameter field="DBTABLE" name="TABLE" value="&quot;&quot;"/>
    <elementParameter field="QUERYSTORE_TYPE" name="QUERYSTORE" value="&quot;&quot;"/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:REPOSITORY_QUERYSTORE_TYPE" show="false" value=""/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:QUERYSTORE_TYPE" value="BUILT_IN"/>
    <elementParameter field="MEMO_SQL" name="QUERY" value="&quot;INSERT&#9;INTO&#13;&#10;&#9;&#9;stg.nobill_aggr_subsdaily_details &#13;&#10;&#9;&#9;SELECT *&#13;&#10;&#9;&#9;FROM&#13;&#10;&#9;&#9;&#9;( (&#13;&#10;&#9;&#9;&#9;&#9;SELECT *&#13;&#10;&#9;&#9;&#9;FROM&#13;&#10;&#9;&#9;&#9;&#9;prod.nobill_aggr_subscriber_daily&#13;&#10;&#9;&#9;&#9;WHERE&#13;&#10;&#9;&#9;&#9;&#9;uds_date = '&quot;+context.vLoadDate+&quot;'&#13;&#10;&#9;&#9;&#9;ORDER BY&#13;&#10;&#9;&#9;&#9;&#9;uds_accountnum ASC )subs&#13;&#10;&#9;&#9;LEFT JOIN (&#13;&#10;&#9;&#9;&#9;&#9;SELECT *&#13;&#10;&#9;&#9;&#9;FROM&#13;&#10;&#9;&#9;&#9;&#9;stg.snapshot_lifetime_recharge&#13;&#10;&#9;&#9;&#9;WHERE&#13;&#10;&#9;&#9;&#9;&#9;re_report_date = '&quot;+context.vLoadDate+&quot;'&#13;&#10;&#9;&#9;&#9;ORDER BY&#13;&#10;&#9;&#9;&#9;&#9;re_in_account_number )re &#13;&#10;&#9;&#9;ON&#13;&#10;&#9;&#9;&#9;subs.uds_accountnum = re.re_in_account_number )z&#9;&quot;"/>
    <elementParameter field="CLOSED_LIST" name="USE_NB_LINE" value="NB_LINE_INSERTED"/>
    <elementParameter field="LABEL" name="USE_NB_LINE_NOTE" value="* Only used if the query is an insert, an update or a delete."/>
    <elementParameter field="CHECK" name="DIE_ON_ERROR" value="true"/>
    <elementParameter field="TEXT" name="PROPERTIES" value="&quot;&quot;"/>
    <elementParameter field="CHECK" name="PROPAGATE_RECORD_SET" value="false"/>
    <elementParameter field="COLUMN_LIST" name="RECORD_SET_COLUMN" show="false" value=""/>
    <elementParameter field="CHECK" name="USE_PREPAREDSTATEMENT" value="false"/>
    <elementParameter field="TABLE" name="SET_PREPAREDSTATEMENT_PARAMETERS" show="false"/>
    <elementParameter field="TEXT" name="ENCODING" show="false" value="&quot;ISO-8859-15&quot;"/>
    <elementParameter field="TEXT" name="COMMIT_EVERY" value="10000"/>
    <elementParameter field="TEXT" name="LABEL" value="load subscriber aggreagtes with lifetime recharge"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
    <metadata connector="FLOW" label="nobill_tx_account_history" name="tDBRow_3"/>
    <metadata connector="REJECT" label="nobill_tx_account_history" name="REJECT">
      <column defaultValue="" key="false" length="255" name="errorCode" nullable="true" originalLength="-1" precision="0" sourceType="" type="id_String" usefulColumn="true"/>
      <column defaultValue="" key="false" length="255" name="errorMessage" nullable="true" originalLength="-1" precision="0" sourceType="" type="id_String" usefulColumn="true"/>
    </metadata>
  </node>
  <node componentName="tJobLog" componentVersion="0.101" offsetLabelX="0" offsetLabelY="0" posX="1504" posY="896">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tJobLog_3"/>
    <elementParameter field="CHECK" name="ACTIVATE" value="false"/>
    <elementParameter field="RADIO" name="DEV_LOG" value="true"/>
    <elementParameter field="RADIO" name="BUSINESS_LOG" value="false"/>
    <elementParameter field="TEXT" name="MESSAGE" value="&quot;Inserted #Records : &quot;+((Integer)globalMap.get(&quot;tDBRow_3_NB_LINE_INSERTED&quot;))"/>
    <elementParameter field="CLOSED_LIST" name="PRIORITY" value="20000"/>
    <elementParameter field="TEXT" name="LABEL" value="logs info"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
    <metadata connector="FLOW" name="tJobLog_3"/>
  </node>
  <node componentName="tVerticaRow" componentVersion="0.102" offsetLabelX="0" offsetLabelY="0" posX="800" posY="736">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tDBRow_4"/>
    <elementParameter field="CHECK" name="ACTIVATE" value="false"/>
    <elementParameter field="CHECK" name="TSTATCATCHER_STATS" value="true"/>
    <elementParameter field="CLOSED_LIST" name="DB_VERSION" value="VERTICA_9_0"/>
    <elementParameter field="CHECK" name="USE_EXISTING_CONNECTION" value="false"/>
    <elementParameter field="COMPONENT_LIST" name="CONNECTION" show="false" value=""/>
    <elementParameter field="TEXT" name="HOST" value="&quot;10.4.32.25&quot;"/>
    <elementParameter field="TEXT" name="PORT" value="&quot;5433&quot;"/>
    <elementParameter field="TEXT" name="DBNAME" value="&quot;ksa_db_prod&quot;"/>
    <elementParameter field="TEXT" name="SCHEMA_DB" value="&quot;stg&quot;"/>
    <elementParameter field="TEXT" name="TYPE" show="false" value="VERTICA"/>
    <elementParameter field="TEXT" name="USER" value="&quot;talend&quot;"/>
    <elementParameter field="PASSWORD" name="PASS" value="enc:system.encryption.key.v1:Z6yQ+ZUiLzRa1E8iKq2Ne9x+y67fAE7p924cAcYpJP0ql7F6GbdqRg=="/>
    <elementParameter field="TECHNICAL" name="SCHEMA_REJECT:SCHEMA_TYPE" show="false" value="REPOSITORY"/>
    <elementParameter field="TECHNICAL" name="SCHEMA_REJECT:REPOSITORY_SCHEMA_TYPE" show="false" value="_m1_YICIYEemZppPRJ5rRnQ - nobill_tx_account_history"/>
    <elementParameter field="DBTABLE" name="TABLE" value="&quot;&quot;"/>
    <elementParameter field="QUERYSTORE_TYPE" name="QUERYSTORE" value="&quot;&quot;"/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:REPOSITORY_QUERYSTORE_TYPE" show="false" value=""/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:QUERYSTORE_TYPE" value="BUILT_IN"/>
    <elementParameter field="MEMO_SQL" name="QUERY" value="&quot;DELETE &#13;&#10;&#9;&#9;FROM &#13;&#10;&#9;&#9;&#9;&#9;stg.nobill_aggr_subsdaily_details &#13;&#10;        WHERE &#13;&#10;&#9;&#9;&#9;&#9;uds_date = '&quot;+context.vLoadDate+ &quot;'&quot;"/>
    <elementParameter field="CLOSED_LIST" name="USE_NB_LINE" value="NB_LINE_DELETED"/>
    <elementParameter field="LABEL" name="USE_NB_LINE_NOTE" value="* Only used if the query is an insert, an update or a delete."/>
    <elementParameter field="CHECK" name="DIE_ON_ERROR" value="true"/>
    <elementParameter field="TEXT" name="PROPERTIES" value="&quot;&quot;"/>
    <elementParameter field="CHECK" name="PROPAGATE_RECORD_SET" value="false"/>
    <elementParameter field="COLUMN_LIST" name="RECORD_SET_COLUMN" show="false" value=""/>
    <elementParameter field="CHECK" name="USE_PREPAREDSTATEMENT" value="false"/>
    <elementParameter field="TABLE" name="SET_PREPAREDSTATEMENT_PARAMETERS" show="false"/>
    <elementParameter field="TEXT" name="ENCODING" show="false" value="&quot;ISO-8859-15&quot;"/>
    <elementParameter field="TEXT" name="COMMIT_EVERY" value="10000"/>
    <elementParameter field="TEXT" name="LABEL" value="clear records if exists for load date-subsdaily details"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
    <metadata connector="FLOW" label="nobill_tx_account_history" name="tDBRow_4"/>
    <metadata connector="REJECT" label="nobill_tx_account_history" name="REJECT">
      <column defaultValue="" key="false" length="255" name="errorCode" nullable="true" originalLength="-1" precision="0" sourceType="" type="id_String" usefulColumn="true"/>
      <column defaultValue="" key="false" length="255" name="errorMessage" nullable="true" originalLength="-1" precision="0" sourceType="" type="id_String" usefulColumn="true"/>
    </metadata>
  </node>
  <node componentName="tVerticaRow" componentVersion="0.102" offsetLabelX="0" offsetLabelY="0" posX="800" posY="32">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tDBRow_6"/>
    <elementParameter field="CHECK" name="TSTATCATCHER_STATS" value="true"/>
    <elementParameter field="TECHNICAL" name="PROPERTY:PROPERTY_TYPE" show="false" value="REPOSITORY"/>
    <elementParameter field="TECHNICAL" name="PROPERTY:REPOSITORY_PROPERTY_TYPE" show="false" value="_5iHVAEWDEemVVo7G2ZId6g"/>
    <elementParameter field="CLOSED_LIST" name="DB_VERSION" show="false" value="VERTICA_9_0"/>
    <elementParameter field="CHECK" name="USE_EXISTING_CONNECTION" value="true"/>
    <elementParameter field="COMPONENT_LIST" name="CONNECTION" value="tDBConnection_1"/>
    <elementParameter field="TEXT" name="HOST" show="false" value="&quot;10.4.32.25&quot;"/>
    <elementParameter field="TEXT" name="PORT" show="false" value="&quot;5433&quot;"/>
    <elementParameter field="TEXT" name="DBNAME" show="false" value="&quot;ksa_db_prod&quot;"/>
    <elementParameter field="TEXT" name="SCHEMA_DB" show="false" value="&quot;prod&quot;"/>
    <elementParameter field="TEXT" name="TYPE" show="false" value="VERTICA"/>
    <elementParameter field="TEXT" name="USER" show="false" value="&quot;talend&quot;"/>
    <elementParameter field="PASSWORD" name="PASS" show="false" value="enc:system.encryption.key.v1:vvv8HaDtN7/xJUjkRS/0T6AEEmXslQQUww86unTGw7ZzXOpj8Tvcuw=="/>
    <elementParameter field="TECHNICAL" name="SCHEMA_REJECT:SCHEMA_TYPE" show="false" value="REPOSITORY"/>
    <elementParameter field="TECHNICAL" name="SCHEMA_REJECT:REPOSITORY_SCHEMA_TYPE" show="false" value="_5iHVAEWDEemVVo7G2ZId6g - "/>
    <elementParameter field="DBTABLE" name="TABLE" value="&quot;&quot;"/>
    <elementParameter field="QUERYSTORE_TYPE" name="QUERYSTORE" value="&quot;&quot;"/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:REPOSITORY_QUERYSTORE_TYPE" show="false" value=""/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:QUERYSTORE_TYPE" value="BUILT_IN"/>
    <elementParameter field="MEMO_SQL" name="QUERY" value="&quot;INSERT INTO &quot;+context.connection_verticadb_schema_prod+&quot;.nobill_aggr_subscriber_daily &#13;&#10;SELECT *,&#13;&#10;                CASE WHEN uds_total_revenue_gross_traffic &gt; 0 OR  &#13;&#10;                uds_total_mins_voice_ex_cf &gt; 0 OR &#13;&#10;                uds_total_sms &gt; 0 OR &#13;&#10;                uds_total_volume_data &gt; 0 OR &#13;&#10;                uds_total_amount_recharge &gt; 0 OR&#13;&#10;                uds_total_revenue_gross_voice_upfront_bundle &gt; 0 OR&#13;&#10;                uds_total_revenue_gross_data_upfront_bundle &gt; 0 &#9;&#9;&#9;&#9;&#13;&#10;                                THEN 1 ELSE 0 end AS uds_flag_activity,&#13;&#10;                                                                CASE WHEN uds_total_mins_voice &gt; 0 THEN 1  ELSE 0 END AS uds_flag_activity_voice,&#13;&#10;                                                                CASE WHEN uds_total_mins_voice_ex_cf &gt; 0 THEN 1  ELSE 0 END AS uds_flag_activity_voice_ex_cf,&#13;&#10;                CASE WHEN uds_total_volume_data &gt; 0 THEN 1  ELSE 0 END AS uds_flag_activity_data,&#13;&#10;                CASE WHEN uds_total_sms &gt; 0 THEN 1  ELSE 0 END AS uds_flag_activity_sms                                                                       &#13;&#10;FROM&#13;&#10;(SELECT&#13;&#10;    /* Totals */&#13;&#10;                   ad_accountnum::int uds_accountnum,&#13;&#10;                   ad_date::date uds_date,&#13;&#10;&#9;&#9;&#9;&#9;   MAX(ad_subscription_type_id) AS uds_subscription_type_id,&#13;&#10;                   SUM(ad_total_revenue_gross) uds_total_revenue_gross,&#13;&#10;                   SUM(ad_total_revenue_received) uds_total_revenue_received,&#13;&#10;                   SUM(ad_total_revenue_net) uds_total_revenue_net,&#13;&#10;                   SUM(ad_total_revenue_gross_tb) uds_total_revenue_gross_tb,&#13;&#10;                   SUM(ad_total_revenue_received_tb) uds_total_revenue_received_tb,&#13;&#10;                   SUM(ad_total_revenue_net_tb) uds_total_revenue_net_tb,&#13;&#10;                   SUM(ad_total_balance_initial) AS uds_total_balance_initial,&#13;&#10;                   SUM(ad_total_cost_wholesale_actual) uds_total_cost_wholesale,&#9;&#9;&#9;&#9;   &#13;&#10;&#9;&#9;&#9;&#9;   SUM(CASE WHEN service_subtype &lt;&gt; 'Expired Credit' THEN ad_total_revenue_gross ELSE 0 END) uds_total_revenue_gross_traffic,&#13;&#10;&#9;&#9;&#9;&#9;   SUM(CASE WHEN service_subtype &lt;&gt; 'Expired Credit' THEN ad_total_revenue_received ELSE 0 END) uds_total_revenue_received_traffic,&#13;&#10;&#9;&#9;&#9;&#9;   SUM(CASE WHEN service_subtype &lt;&gt; 'Expired Credit' THEN ad_total_revenue_net ELSE 0 END) uds_total_revenue_net_traffic,&#9;&#13;&#10;&#9;&#9;&#9;&#9;   SUM(CASE WHEN service_subtype &lt;&gt; 'Expired Credit' THEN ad_total_revenue_gross_tb ELSE 0 END) uds_total_revenue_gross_traffic_tb,&#13;&#10;&#9;&#9;&#9;&#9;   SUM(CASE WHEN service_subtype &lt;&gt; 'Expired Credit' THEN ad_total_revenue_received_tb ELSE 0 END) uds_total_revenue_received_traffic_tb,&#13;&#10;&#9;&#9;&#9;&#9;   SUM(CASE WHEN service_subtype &lt;&gt; 'Expired Credit' THEN ad_total_revenue_net_tb ELSE 0 END) uds_total_revenue_net_traffic_tb,&#9;&#9;&#9;&#9;&#9;   &#13;&#10;    /* Voice */          &#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' THEN ad_total_revenue_received ELSE 0 END) uds_total_revenue_received_voice,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' THEN ad_total_revenue_net ELSE 0 END) uds_total_revenue_net_voice,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' THEN ad_total_revenue_net_payg ELSE 0 END) uds_total_revenue_net_voice_payg,&#13;&#10;&#9;&#9;&#9;&#9;   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'Voice Bundle' THEN ad_total_revenue_gross_upfront_bundle ELSE 0 END) uds_total_revenue_gross_voice_upfront_bundle,&#9;&#13;&#10;&#9;&#9;&#9;&#9;   SUM(CASE WHEN service_group = 'Voice' THEN ad_total_revenue_net_usage_bundle ELSE 0 END)uds_total_net_usage_bundle_voice_revenue,&#9;&#9;&#9;&#9;   &#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' THEN ad_total_cost_wholesale_actual ELSE 0 END) uds_total_cost_wholesale_voice,   &#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND ad_terminationreason IN (0, 6, 7, 8, 10) THEN ad_total_duration / 60000 ELSE 0 END) uds_total_mins_voice,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND ad_call_direction_id &lt;&gt; 3 AND ad_terminationreason IN (0, 6, 7, 8, 10) THEN ad_total_duration / 60000 ELSE 0 END) uds_total_mins_voice_ex_cf,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND ad_terminationreason IN (0, 6, 7, 8, 10) THEN ad_total_duration_payg / 60000 ELSE 0 END) uds_total_mins_voice_payg,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND ad_terminationreason IN (0, 6, 7, 8, 10) AND dcr_category_3 = 'Voice Bundle' THEN ad_total_duration_counter / 60000 ELSE 0 END) uds_total_mins_voice_bundle,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND ad_terminationreason IN (0, 6, 7, 8, 10) AND dcr_category_3 = 'Voice Bonus' THEN ad_total_duration_counter / 60000 ELSE 0 END) uds_total_mins_voice_bonus,&#13;&#10;    /* Voice MOC */               &#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' THEN ad_total_revenue_received ELSE 0 END) uds_total_revenue_received_moc,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' THEN ad_total_revenue_net ELSE 0 END) uds_total_revenue_net_moc,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' THEN ad_total_revenue_net_payg ELSE 0 END) uds_total_revenue_net_moc_payg,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' THEN ad_total_cost_wholesale_actual ELSE 0 END) uds_total_revenue_cost_wholesale_moc,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND ad_terminationreason IN (0, 6, 7, 8, 10) THEN ad_total_duration / 60000 ELSE 0 END) uds_total_mins_moc,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND ad_terminationreason IN (0, 6, 7, 8, 10) THEN ad_total_duration_payg / 60000 ELSE 0 END) uds_total_mins_moc_payg,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND ad_terminationreason IN (0, 6, 7, 8, 10) AND dcr_category_3 = 'Voice Bundle' THEN ad_total_duration_counter / 60000 ELSE 0 END) uds_total_mins_moc_bundle,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND ad_terminationreason IN (0, 6, 7, 8, 10) AND dcr_category_3 = 'Voice Bonus' THEN ad_total_duration_counter / 60000 ELSE 0 END) uds_total_mins_moc_bonus,&#13;&#10;    /* Voice MOC NAT */     &#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'National'  THEN ad_total_revenue_received ELSE 0 END) uds_total_revenue_received_moc_nat,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'National'  THEN ad_total_revenue_net ELSE 0 END) uds_total_revenue_net_moc_nat,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'National'  THEN ad_total_revenue_net_payg ELSE 0 END) uds_total_revenue_net_moc_nat_payg,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'National'  THEN ad_total_cost_wholesale_actual ELSE 0 END) uds_total_cost_wholesale_moc_nat,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'National'  AND ad_terminationreason IN (0, 6, 7, 8, 10) THEN ad_total_duration / 60000 ELSE 0 END) uds_total_mins_moc_nat,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'National'  AND ad_terminationreason IN (0, 6, 7, 8, 10) THEN ad_total_duration_payg / 60000 ELSE 0 END) uds_total_mins_moc_nat_payg,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'National'  AND ad_terminationreason IN (0, 6, 7, 8, 10) AND dcr_category_3 = 'Voice Bundle' THEN ad_total_duration_counter / 60000 ELSE 0 END) uds_total_mins_moc_nat_bundle,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'National'  AND ad_terminationreason IN (0, 6, 7, 8, 10) AND dcr_category_3 = 'Voice Bonus'  THEN ad_total_duration_counter / 60000 ELSE 0 END) uds_total_mins_moc_nat_bonus,&#13;&#10;    /* Voice MOC NAT ONNET */                                                                                      &#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'National' AND traffic_onnet_offnet = 'On-Net Mobile' THEN ad_total_revenue_received ELSE 0 END) uds_total_revenue_received_moc_nat_onnet,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'National' AND traffic_onnet_offnet = 'On-Net Mobile' THEN ad_total_revenue_net ELSE 0 END) uds_total_revenue_net_moc_nat_onnet,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'National' AND traffic_onnet_offnet = 'On-Net Mobile' THEN ad_total_revenue_net_payg ELSE 0 END) uds_total_revenue_net_moc_nat_onnet_payg,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'National' AND traffic_onnet_offnet = 'On-Net Mobile' THEN ad_total_cost_wholesale_actual ELSE 0 END) uds_total_cost_wholesale_moc_nat_onnet,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'National' AND traffic_onnet_offnet = 'On-Net Mobile' AND ad_terminationreason IN (0, 6, 7, 8, 10) THEN ad_total_duration / 60000 ELSE 0 END) uds_total_mins_moc_nat_onnet,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'National' AND traffic_onnet_offnet = 'On-Net Mobile' AND ad_terminationreason IN (0, 6, 7, 8, 10) THEN ad_total_duration_payg / 60000 ELSE 0 END) uds_total_mins_moc_nat_onnet_payg,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'National' AND traffic_onnet_offnet = 'On-Net Mobile' AND ad_terminationreason IN (0, 6, 7, 8, 10) AND dcr_category_3 = 'Voice Bundle'  THEN ad_total_duration_counter / 60000 ELSE 0 END) uds_total_mins_moc_nat_onnet_bundle,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'National' AND traffic_onnet_offnet = 'On-Net Mobile' AND ad_terminationreason IN (0, 6, 7, 8, 10) AND dcr_category_3 = 'Voice Bonus'  THEN ad_total_duration_counter / 60000 ELSE 0 END) uds_total_mins_moc_nat_onnet_bonus,&#13;&#10;    /* Voice MOC NAT OFFNET */    &#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'National' AND traffic_onnet_offnet &lt;&gt; 'On-Net Mobile'  THEN ad_total_revenue_received ELSE 0 END) uds_total_revenue_received_moc_nat_offnet,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'National' AND traffic_onnet_offnet &lt;&gt; 'On-Net Mobile' THEN ad_total_revenue_net ELSE 0 END) uds_total_revenue_net_moc_nat_offnet,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'National' AND traffic_onnet_offnet &lt;&gt; 'On-Net Mobile' THEN ad_total_revenue_net_payg ELSE 0 END) uds_total_revenue_net_moc_nat_offnet_payg,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'National' AND traffic_onnet_offnet &lt;&gt; 'On-Net Mobile' THEN ad_total_cost_wholesale_actual ELSE 0 END) uds_total_cost_wholesale_moc_nat_offnet,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'National' AND traffic_onnet_offnet &lt;&gt; 'On-Net Mobile' AND ad_terminationreason IN (0, 6, 7, 8, 10) THEN ad_total_duration / 60000 ELSE 0 END) uds_total_mins_moc_nat_offnet,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'National' AND traffic_onnet_offnet &lt;&gt; 'On-Net Mobile' AND ad_terminationreason IN (0, 6, 7, 8, 10) THEN ad_total_duration_payg / 60000 ELSE 0 END) uds_total_mins_moc_nat_offnet_payg,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'National' AND traffic_onnet_offnet &lt;&gt; 'On-Net Mobile' AND ad_terminationreason IN (0, 6, 7, 8, 10) AND dcr_category_3 = 'Voice Bundle' THEN ad_total_duration_counter / 60000 ELSE 0 END) uds_total_mins_moc_nat_offnet_bundle,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'National' AND traffic_onnet_offnet &lt;&gt; 'On-Net Mobile' AND ad_terminationreason IN (0, 6, 7, 8, 10) AND dcr_category_3 = 'Voice Bonus'  THEN ad_total_duration_counter / 60000 ELSE 0 END) uds_total_mins_moc_nat_offnet_bonus,&#13;&#10;    /* Voice MOC INTL */     &#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'International'  THEN ad_total_revenue_received ELSE 0 END) uds_total_revenue_received_moc_intl,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'International'  THEN ad_total_revenue_net ELSE 0 END) uds_total_revenue_net_moc_intl,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'International'  THEN ad_total_revenue_net_payg ELSE 0 END) uds_total_revenue_net_moc_intl_payg,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'International'  THEN ad_total_cost_wholesale_actual ELSE 0 END) uds_total_cost_wholesale_moc_intl,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'International'  AND ad_terminationreason IN (0, 6, 7, 8, 10) THEN ad_total_duration / 60000 ELSE 0 END) uds_total_mins_moc_intl,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'International'  AND ad_terminationreason IN (0, 6, 7, 8, 10) THEN ad_total_duration_payg / 60000 ELSE 0 END) uds_total_mins_moc_intl_payg,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'International'  AND ad_terminationreason IN (0, 6, 7, 8, 10)  AND dcr_category_3 = 'Voice Bundle' THEN ad_total_duration_counter / 60000 ELSE 0 END) uds_total_mins_moc_intl_bundle,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MOC' AND traffic_national_international = 'International'  AND ad_terminationreason IN (0, 6, 7, 8, 10) THEN ad_total_duration_counter / 60000 ELSE 0 END) uds_total_mins_moc_intl_bonus,&#13;&#10;   /* Voice MTC */&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MTC' THEN ad_total_revenue_received ELSE 0 END) uds_total_revenue_received_mtc,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MTC' THEN ad_total_revenue_net ELSE 0 END) uds_total_revenue_net_mtc,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MTC' THEN ad_total_cost_wholesale_actual ELSE 0 END) uds_total_revenue_cost_wholesale_mtc,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MTC' AND ad_terminationreason IN (0, 6, 7, 8, 10) THEN ad_total_duration / 60000 ELSE 0 END) uds_total_mins_mtc,&#13;&#10;    /*Voice MTC NAT */&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MTC' AND traffic_national_international = 'National'  THEN ad_total_revenue_received ELSE 0 END) uds_total_revenue_received_mtc_nat,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MTC' AND traffic_national_international = 'National'  THEN ad_total_revenue_net ELSE 0 END) uds_total_revenue_net_mtc_nat,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MTC' AND traffic_national_international = 'National'  THEN ad_total_cost_wholesale_actual ELSE 0 END) uds_total_cost_wholesale_mtc_nat,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MTC' AND traffic_national_international = 'National'  AND ad_terminationreason IN (0, 6, 7, 8, 10) THEN ad_total_duration / 60000 ELSE 0 END) uds_total_mins_mtc_nat,&#13;&#10;    /* Voice MTC NAT ONNET */                                                                                       &#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MTC' AND traffic_national_international = 'National' AND traffic_onnet_offnet = 'On-Net Mobile' THEN ad_total_revenue_received ELSE 0 END) uds_total_revenue_received_mtc_nat_onnet,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MTC' AND traffic_national_international = 'National' AND traffic_onnet_offnet = 'On-Net Mobile' THEN ad_total_revenue_net ELSE 0 END) uds_total_revenue_net_mtc_nat_onnet,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MTC' AND traffic_national_international = 'National' AND traffic_onnet_offnet = 'On-Net Mobile' THEN ad_total_cost_wholesale_actual ELSE 0 END) uds_total_cost_wholesale_mtc_nat_onnet,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MTC' AND traffic_national_international = 'National' AND traffic_onnet_offnet = 'On-Net Mobile' AND ad_terminationreason IN (0, 6, 7, 8, 10) THEN ad_total_duration / 60000 ELSE 0 END) uds_total_mins_mtc_nat_onnet,&#13;&#10;    /* Voice MTC NAT OFFNET */     &#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MTC' AND traffic_national_international = 'National' AND traffic_onnet_offnet &lt;&gt; 'On-Net Mobile' THEN ad_total_revenue_received ELSE 0 END) uds_total_revenue_received_mtc_nat_offnet,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MTC' AND traffic_national_international = 'National' AND traffic_onnet_offnet &lt;&gt; 'On-Net Mobile' THEN ad_total_revenue_net ELSE 0 END) uds_total_revenue_net_mtc_nat_offnet,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MTC' AND traffic_national_international = 'National' AND traffic_onnet_offnet &lt;&gt; 'On-Net Mobile' THEN ad_total_cost_wholesale_actual ELSE 0 END) uds_total_cost_wholesale_mtc_nat_offnet,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MTC' AND traffic_national_international = 'National' AND traffic_onnet_offnet &lt;&gt; 'On-Net Mobile' AND ad_terminationreason IN (0, 6, 7, 8, 10) THEN ad_total_duration / 60000 ELSE 0 END) uds_total_mins_mtc_nat_offnet,&#13;&#10;    /* Voice MTC INTL */      &#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MTC' AND traffic_national_international = 'International'  THEN ad_total_revenue_received ELSE 0 END) uds_total_revenue_received_mtc_intl,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MTC' AND traffic_national_international = 'International'  THEN ad_total_revenue_net ELSE 0 END) uds_total_revenue_net_mtc_intl,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MTC' AND traffic_national_international = 'International'  THEN ad_total_cost_wholesale_actual ELSE 0 END) uds_total_cost_wholesale_mtc_intl,&#13;&#10;                   SUM(CASE WHEN service_group = 'Voice' AND service_type = 'MTC' AND traffic_national_international = 'International'  AND ad_terminationreason IN (0, 6, 7, 8, 10) THEN ad_total_duration / 60000 ELSE 0 END) uds_total_mins_mtc_intl, &#13;&#10;    /* SMS */&#13;&#10;                   SUM(CASE WHEN service_group = 'SMS' THEN ad_total_revenue_received ELSE 0 END) AS uds_total_revenue_received_sms,&#13;&#10;                   SUM(CASE WHEN service_group = 'SMS' THEN ad_total_revenue_net ELSE 0 END) AS uds_total_revenue_net_sms,&#13;&#10;                   SUM(CASE WHEN service_group = 'SMS' THEN ad_total_revenue_net_payg ELSE 0 END) AS uds_total_revenue_net_sms_payg,&#13;&#10;                   SUM(CASE WHEN service_group = 'SMS' THEN ad_total_cost_wholesale_actual ELSE 0 END) AS uds_total_cost_wholesale_sms,&#13;&#10;                   SUM(CASE WHEN service_group = 'SMS' THEN ad_total_sms ELSE 0 END) AS uds_total_sms,&#13;&#10;                   SUM(CASE WHEN service_group = 'SMS' THEN ad_total_sms_payg ELSE 0 END) AS uds_total_sms_payg,&#13;&#10;&#9;&#9;&#9;&#9;   SUM(CASE WHEN service_group = 'SMS' AND dcr_category_2 IN ('Voice Bundle','SMS Bundle') THEN ad_total_sms_counter ELSE 0 END) uds_total_sms_bundle,&#13;&#10;                   SUM(CASE WHEN service_group = 'SMS' AND dcr_category_3 = 'Voice Bonus' THEN ad_total_sms_counter  ELSE 0 END) uds_total_sms_bonus,&#13;&#10;    /* SMS NAT*/&#13;&#10;                   SUM(CASE WHEN service_group = 'SMS' AND traffic_national_international = 'National' THEN ad_total_revenue_received ELSE 0 END) AS uds_total_revenue_received_sms_nat,&#13;&#10;                   SUM(CASE WHEN service_group = 'SMS' AND traffic_national_international = 'National' THEN ad_total_revenue_net ELSE 0 END) AS uds_total_revenue_net_sms_nat,&#13;&#10;                   SUM(CASE WHEN service_group = 'SMS' AND traffic_national_international = 'National' THEN ad_total_revenue_net_payg ELSE 0 END) AS uds_total_revenue_net_sms_nat_payg,&#13;&#10;                   SUM(CASE WHEN service_group = 'SMS' AND traffic_national_international = 'National' THEN ad_total_cost_wholesale_actual ELSE 0 END) AS uds_total_cost_wholesale_sms_nat,&#13;&#10;                   SUM(CASE WHEN service_group = 'SMS' AND traffic_national_international = 'National' THEN ad_total_sms ELSE 0 END) AS uds_total_sms_nat,&#13;&#10;                   SUM(CASE WHEN service_group = 'SMS' AND traffic_national_international = 'National' THEN ad_total_sms_payg ELSE 0 END) AS uds_total_sms_nat_payg,&#13;&#10;&#9;&#9;&#9;&#9;   SUM(CASE WHEN service_group = 'SMS' AND traffic_national_international = 'National' AND dcr_category_3 IN ('Voice Bundle','SMS Bundle') THEN ad_total_sms_counter ELSE 0 END) AS uds_total_sms_nat_bundle,&#13;&#10;                   SUM(CASE WHEN service_group = 'SMS' AND traffic_national_international = 'National' AND dcr_category_3 = 'Voice Bonus' THEN ad_total_sms_counter ELSE 0 END) AS  uds_total_sms_nat_bonus,         &#13;&#10;    /* SMS INTL*/&#13;&#10;                   SUM(CASE WHEN service_group = 'SMS' AND traffic_national_international = 'International' THEN ad_total_revenue_received ELSE 0 END) AS uds_total_revenue_received_sms_intl,&#13;&#10;                   SUM(CASE WHEN service_group = 'SMS' AND traffic_national_international = 'International' THEN ad_total_revenue_net ELSE 0 END) AS uds_total_revenue_net_sms_intl,&#13;&#10;                   SUM(CASE WHEN service_group = 'SMS' AND traffic_national_international = 'International' THEN ad_total_revenue_net_payg ELSE 0 END) AS uds_total_revenue_net_sms_intl_payg,&#13;&#10;                   SUM(CASE WHEN service_group = 'SMS' AND traffic_national_international = 'International' THEN ad_total_cost_wholesale_actual ELSE 0 END) AS uds_total_revenue_cost_wholesale_sms_intl,&#13;&#10;                   SUM(CASE WHEN service_group = 'SMS' AND traffic_national_international = 'International' THEN ad_total_sms ELSE 0 END) AS uds_total_sms_intl,&#13;&#10;                   SUM(CASE WHEN service_group = 'SMS' AND traffic_national_international = 'International' THEN ad_total_sms_payg ELSE 0 END) AS uds_total_sms_intl_payg,&#13;&#10;&#9;&#9;&#9;&#9;   SUM(CASE WHEN service_group = 'SMS' AND traffic_national_international = 'International' AND dcr_category_3 IN ('Voice Bundle','SMS Bundle') THEN ad_total_sms_counter ELSE 0 END) AS uds_total_sms_intl_bundle,&#13;&#10;                   SUM(CASE WHEN service_group = 'SMS' AND traffic_national_international = 'International' AND dcr_category_3 = 'Voice Bonus' THEN ad_total_sms_counter ELSE 0 END) AS uds_total_sms_intl_bonus,         &#13;&#10;    /* DATA */&#13;&#10;&#9;&#9;&#9;&#9;   SUM(CASE WHEN service_group = 'Data' THEN ad_total_revenue_received ELSE 0 END) AS uds_total_revenue_received_data,&#13;&#10;                   SUM(CASE WHEN service_group = 'Data' THEN ad_total_revenue_net ELSE 0 END) AS uds_total_revenue_net_data,&#13;&#10;                   SUM(CASE WHEN service_group = 'Data' THEN ad_total_revenue_net_payg ELSE 0 END) AS uds_total_revenue_net_data_payg,&#13;&#10;&#9;&#9;&#9;&#9;   SUM(CASE WHEN service_group = 'Data' THEN ad_total_revenue_net_usage_bundle ELSE 0 END) AS uds_total_net_data_usage_bundle_revenue,&#13;&#10;                   SUM(CASE WHEN service_group = 'Data' THEN ad_total_cost_wholesale_actual ELSE 0 END) AS uds_total_cost_wholesale_data,&#13;&#10;&#9;&#9;&#9;&#9;   SUM(CASE WHEN service_group = 'Data'  AND service_type = 'Data Bundle'  THEN ad_total_revenue_gross_upfront_bundle ELSE 0 END) uds_total_revenue_gross_data_upfront_bundle,&#13;&#10;                   SUM(CASE WHEN service_group = 'Data' THEN ad_total_data_volume/ 1024 / 1024 ELSE 0 END) AS uds_total_volume_data,&#13;&#10;                   SUM(CASE WHEN service_group = 'Data' THEN ad_total_data_volume_payg/ 1024 / 1024 ELSE 0 END) AS uds_total_volume_data_payg,&#13;&#10;                   SUM(CASE WHEN service_group = 'Data' AND dcr_category_3 = 'Data Bundle' THEN ad_total_data_volume_counter/ 1024 / 1024 ELSE 0 END) AS uds_total_volume_data_bundle,&#13;&#10;                   SUM(CASE WHEN service_group = 'Data' AND dcr_category_3 =  'Data Bonus'  THEN ad_total_data_volume_counter/ 1024 / 1024 ELSE 0 END) AS  uds_total_volume_data_bonus,&#13;&#10;&#9;/* DATA REGULAR */--dev_category_3 &lt;&gt;'Combo' AND dev_category_1 = 'Data'&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;   SUM(CASE WHEN service_group = 'Data' AND dev_category_1='Data' AND dev_category_3 &lt;&gt; 'Combo' THEN ad_total_revenue_received ELSE 0 END) AS uds_total_revenue_received_data_regular,&#13;&#10;                   SUM(CASE WHEN service_group = 'Data' AND dev_category_1='Data' AND dev_category_3 &lt;&gt; 'Combo' THEN ad_total_revenue_net ELSE 0 END) AS uds_total_revenue_net_data_regular,&#13;&#10;                   SUM(CASE WHEN service_group = 'Data' AND dev_category_1='Data' AND dev_category_3 &lt;&gt; 'Combo' THEN ad_total_cost_wholesale_actual ELSE 0 END) AS uds_total_cost_wholesale_data_regular,&#13;&#10;                   SUM(CASE WHEN service_group = 'Data' AND dev_category_1='Data' AND dev_category_3 &lt;&gt; 'Combo' THEN ad_total_data_volume/ 1024 / 1024 ELSE 0 END) AS uds_total_volume_data_regular,&#13;&#10;    /* DATA MIXED */ --dev_category_3 ='Combo' AND dev_category_1 = 'Data'                &#13;&#10;&#9;&#9;&#9;&#9;   SUM(CASE WHEN service_group = 'Data' AND dev_category_1='Data' AND dev_category_3 = 'Combo' THEN ad_total_revenue_received ELSE 0 END) AS uds_total_revenue_received_data_mixed,&#13;&#10;                   SUM(CASE WHEN service_group = 'Data' AND dev_category_1='Data' AND dev_category_3 = 'Combo' THEN ad_total_revenue_net ELSE 0 END) AS uds_total_revenue_net_data_mixed,&#13;&#10;                   SUM(CASE WHEN service_group = 'Data' AND dev_category_1='Data' AND dev_category_3 = 'Combo' THEN ad_total_cost_wholesale_actual ELSE 0 END) AS uds_total_cost_wholesale_data_mixed,&#13;&#10;                   SUM(CASE WHEN service_group = 'Data' AND dev_category_1='Data' AND dev_category_3 = 'Combo' THEN ad_total_data_volume/ 1024 / 1024 ELSE 0 END) AS uds_total_volume_data_mixed,&#13;&#10;    /* VAS IAT */--dev_category_1 = 'VAS' AND dev_category_3 = 'International Credit Transfer'&#13;&#10;                   SUM(CASE WHEN dev_category_1='VAS' AND dev_category_3 = 'International Credit Transfer' THEN ad_total_revenue_received ELSE 0 END) AS uds_total_revenue_received_vas_iat,&#13;&#10;                   SUM(CASE WHEN dev_category_1='VAS' AND dev_category_3 = 'International Credit Transfer' THEN ad_total_revenue_net ELSE 0 END) AS uds_total_revenue_net_vas_iat,&#13;&#10;                   SUM(CASE WHEN dev_category_1='VAS' AND dev_category_3 = 'International Credit Transfer' THEN ad_total_cost_wholesale_actual ELSE 0 END) AS uds_total_cost_wholesale_vas_iat,&#13;&#10;                   SUM(CASE WHEN dev_category_1='VAS' AND dev_category_3 = 'International Credit Transfer' THEN ad_total_quantity ELSE 0 END) AS uds_total_count_vas_iat,&#13;&#10;&#9;/* VAS OTHERS */ --dev_category_1 = 'VAS' AND dev_category_3 &lt;&gt; 'International Credit Transfer'&#13;&#10;                   SUM(CASE WHEN dev_category_1='VAS' AND dev_category_3 &lt;&gt; 'International Credit Transfer' THEN ad_total_revenue_received ELSE 0 END) AS uds_total_revenue_received_vas_others,&#13;&#10;                   SUM(CASE WHEN dev_category_1='VAS' AND dev_category_3 &lt;&gt; 'International Credit Transfer' THEN ad_total_revenue_net ELSE 0 END) AS uds_total_revenue_net_vas_others,&#13;&#10;                   SUM(CASE WHEN dev_category_1='VAS' AND dev_category_3 &lt;&gt; 'International Credit Transfer' THEN ad_total_cost_wholesale_actual ELSE 0 END) AS uds_total_cost_wholesale_vas_others,&#13;&#10;                   SUM(CASE WHEN dev_category_1='VAS' AND dev_category_3 &lt;&gt; 'International Credit Transfer' THEN ad_total_quantity ELSE 0 END) AS uds_total_count_vas_others,&#13;&#10;&#9;/* RECHARGE */&#13;&#10;                   SUM(CASE WHEN service_group = 'Recharge' THEN ad_total_quantity ELSE 0 END) uds_total_count_recharge,&#13;&#10;                   SUM(CASE WHEN service_group = 'Recharge' THEN ad_total_adjustment_amount ELSE 0 END) AS uds_total_amount_recharge,&#13;&#10;    /* SUBSCRIPTIONS - VOICE */ --dev_category_1 = 'Voice' AND dev_category_3 = '' //check value                        &#13;&#10;&#9;&#9;&#9;&#9;&#9;SUM(CASE WHEN service_group = 'Voice' AND dev_category_1 = 'Voice' AND dev_category_3 = 'International Voice Bundle' THEN ad_total_quantity ELSE 0 END) AS uds_total_subscriptions_voice_intl,&#13;&#10;&#9;&#9;&#9;&#9;&#9;SUM(CASE WHEN service_group = 'Voice' AND dev_category_1 = 'Voice' AND dev_category_3 = 'National Voice Bundle' THEN ad_total_quantity ELSE 0 END) AS uds_total_subscriptions_voice_nat,&#13;&#10;&#9;&#9;&#9;&#9;&#9;SUM(CASE WHEN service_group = 'Voice' AND dev_category_1 = 'Voice' AND dev_category_3 = 'Voice Booster' THEN ad_total_quantity ELSE 0 END) AS uds_total_subscriptions_voice_booster,&#13;&#10;&#9;&#9;&#9;&#9;&#9;SUM(CASE WHEN service_group = 'Voice' AND dev_category_1 = 'Voice' AND dev_category_3 = 'International Voice Bundle' THEN ad_total_revenue_net_upfront_bundle ELSE 0 END) AS uds_total_revenue_net_upfront_voice_intl,&#13;&#10;&#9;&#9;&#9;&#9;&#9;SUM(CASE WHEN service_group = 'Voice' AND dev_category_1 = 'Voice' AND dev_category_3 = 'National Voice Bundle' THEN ad_total_revenue_net_upfront_bundle ELSE 0 END) AS uds_total_revenue_net_upfront_voice_nat,&#13;&#10;&#9;&#9;&#9;&#9;&#9;SUM(CASE WHEN service_group = 'Voice' AND dev_category_1 = 'Voice' AND dev_category_3 = 'Voice Booster' THEN ad_total_revenue_net_upfront_bundle ELSE 0 END) AS uds_total_revenue_net_upfront_voice_booster,&#13;&#10;&#9;/* SUBSCRIPTIONS - DATA */ --dev_category_1 = 'Data' AND dev_category_3 = '' //check value&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;SUM(CASE WHEN service_group = 'Data' AND dev_category_1 = 'Data' AND dev_category_3 &lt;&gt; 'Combo' THEN ad_total_quantity ELSE 0 END) AS uds_total_subscriptions_data_regular,&#13;&#10;&#9;&#9;&#9;&#9;&#9;SUM(CASE WHEN service_group = 'Data' AND dev_category_1 = 'Data' AND dev_category_3 = 'Combo' THEN ad_total_quantity ELSE 0 END) AS uds_total_subscriptions_data_mixed,&#13;&#10;&#9;&#9;&#9;&#9;&#9;SUM(CASE WHEN service_group = 'Data' AND dev_category_1 = 'Data' AND dev_category_3 = 'Data Booster' THEN ad_total_quantity ELSE 0 END) AS uds_total_subscriptions_data_booster,&#13;&#10;&#9;&#9;&#9;&#9;&#9;SUM(CASE WHEN service_group = 'Data' AND dev_category_1 = 'Data' AND dev_category_3 &lt;&gt; 'Combo' THEN ad_total_revenue_net_upfront_bundle ELSE 0 END) AS uds_total_revenue_net_upfront_data_regular,&#13;&#10;&#9;&#9;&#9;&#9;&#9;SUM(CASE WHEN service_group = 'Data' AND dev_category_1 = 'Data' AND dev_category_3 = 'Combo' THEN ad_total_revenue_net_upfront_bundle ELSE 0 END) AS uds_total_revenue_net_upfront_data_mixed,&#13;&#10;&#9;&#9;&#9;&#9;&#9;SUM(CASE WHEN service_group = 'Data' AND dev_category_1 = 'Data' AND dev_category_3 = 'Data Booster' THEN ad_total_revenue_net_upfront_bundle ELSE 0 END) AS uds_total_revenue_net_upfront_data_booster,&#13;&#10;&#9;/* TIME BASED */&#13;&#10;&#9;&#9;&#9;&#9;&#9;SUM(CASE WHEN service_group = 'Data' THEN ad_total_revenue_net_tb ELSE 0 END) AS uds_total_data_revenue_net_tb,&#13;&#10;&#9;&#9;&#9;&#9;&#9;SUM(CASE WHEN service_group = 'Voice' THEN ad_total_revenue_net_tb ELSE 0 END) AS uds_total_voice_revenue_net_tb,&#13;&#10;&#9;&#9;&#9;&#9;&#9;SUM(CASE WHEN service_group = 'SMS' THEN ad_total_revenue_net_tb ELSE 0 END) AS uds_total_sms_revenue_net_tb,&#13;&#10;&#9;&#9;&#9;&#9;&#9;SUM(CASE WHEN service_group = 'Event' THEN ad_total_revenue_net_tb ELSE 0 END) AS uds_total_event_revenue_net_tb,&#13;&#10;&#9;&#9;&#9;&#9;&#9;SUM(CASE WHEN service_group = 'Data' THEN ad_total_revenue_received_tb ELSE 0 END) AS uds_total_data_revenue_received_tb,&#13;&#10;&#9;&#9;&#9;&#9;&#9;SUM(CASE WHEN service_group = 'Voice' THEN ad_total_revenue_received_tb ELSE 0 END) AS uds_total_voice_revenue_received_tb,&#13;&#10;&#9;&#9;&#9;&#9;&#9;SUM(CASE WHEN service_group = 'SMS' THEN ad_total_revenue_received_tb ELSE 0 END) AS uds_total_sms_revenue_received_tb,&#13;&#10;&#9;&#9;&#9;&#9;&#9;SUM(CASE WHEN service_group = 'Event' THEN ad_total_revenue_received_tb ELSE 0 END) AS uds_total_event_revenue_received_tb,&#13;&#10;&#9;&#9;&#9;&#9;&#9;SUM(CASE WHEN service_group = 'Data' THEN ad_total_revenue_gross_tb ELSE 0 END) AS uds_total_data_revenue_gross_tb,&#13;&#10;&#9;&#9;&#9;&#9;&#9;SUM(CASE WHEN service_group = 'Voice' THEN ad_total_revenue_gross_tb ELSE 0 END) AS uds_total_voice_revenue_gross_tb,&#13;&#10;&#9;&#9;&#9;&#9;&#9;SUM(CASE WHEN service_group = 'SMS' THEN ad_total_revenue_gross_tb ELSE 0 END) AS uds_total_sms_revenue_gross_tb,&#13;&#10;&#9;&#9;&#9;&#9;&#9;SUM(CASE WHEN service_group = 'Event' THEN ad_total_revenue_gross_tb ELSE 0 END) AS uds_total_event_revenue_gross_tb,&#13;&#10;&#9;&#9;&#9;&#9;&#9;SUM(CASE WHEN service_group = 'Data' and service_type = 'Data Bundle' THEN ad_total_revenue_net_tb ELSE 0 END) AS uds_total_data_bundle_revenue_net_tb,&#13;&#10;&#9;&#9;&#9;&#9;&#9;SUM(CASE WHEN service_group = 'Data' and service_type = 'Voice Bundle' THEN ad_total_revenue_net_tb ELSE 0 END) AS uds_total_voice_bundle_revenue_net_tb,&#13;&#10;&#9;&#9;&#9;&#9;&#9;SUM(CASE WHEN service_group = 'Voice' AND service_type in ('MOC','Voice Bundle') THEN ad_total_revenue_net_tb ELSE 0 END) AS uds_total_voice_moc_revenue_net_tb,&#13;&#10;&#9;&#9;&#9;&#9;&#9;SUM(CASE WHEN service_group = 'Voice' AND service_type in ('MOC','Voice Bundle') AND traffic_national_international = 'National' THEN ad_total_revenue_net_tb ELSE 0 END) AS uds_total_voice_moc_nat_revenue_net_tb,&#13;&#10;&#9;&#9;&#9;&#9;&#9;SUM(CASE WHEN service_group = 'Voice' AND service_type in ('MOC','Voice Bundle') AND traffic_national_international = 'International' THEN ad_total_revenue_net_tb ELSE 0 END) AS uds_total_voice_moc_intl_revenue_net_tb&#9;&#9;&#9;&#9;&#13;&#10;FROM&#13;&#10;&#9;(SELECT OUT2.*,DEV.*&#13;&#10;&#9; FROM&#13;&#10;&#9;&#9;(SELECT OUT1.*,DCR.*&#13;&#10;&#9;&#9; FROM&#13;&#10;&#9;&#9;&#9;(&#9;SELECT AGGR.*, TKEY.*&#13;&#10;&#9;&#9;&#9;&#9;FROM&#13;&#10;&#9;&#9;&#9;&#9;(SELECT&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_accountnum,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_date,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_subscription_type_id,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_eventid,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_transaction_id,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_counter_type_id,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_call_direction_id,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_total_revenue_gross,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_total_revenue_received,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_total_revenue_net,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_total_revenue_net_payg,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_total_balance_initial,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_total_cost_wholesale_actual,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_terminationreason,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_total_duration,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_total_duration_payg,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_total_duration_counter,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_total_sms,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_total_sms_payg,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_total_sms_counter,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_total_data_volume,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_total_data_volume_payg,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_total_data_volume_counter,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_total_quantity,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_total_adjustment_amount,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_total_revenue_net_upfront_bundle,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_total_revenue_gross_upfront_bundle,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_total_revenue_net_usage_bundle,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_total_revenue_gross_tb,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_total_revenue_received_tb,&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_total_revenue_net_tb&#13;&#10;&#9;&#9;&#9;&#9;FROM&#13;&#10;&#9;&#9;&#9;&#9;&#9;&quot;+context.connection_verticadb_schema_prod+&quot;.nobill_aggr_ws_cost &#13;&#10;&#9;&#9;&#9;&#9;WHERE&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_date = '&quot;+context.vLoadDate+ &quot;'&#13;&#10;&#9;&#9;&#9;&#9;ORDER BY&#13;&#10;&#9;&#9;&#9;&#9;&#9;ad_transaction_id) AGGR&#13;&#10;&#9;&#9;&#9;&#9;INNER JOIN ( SELECT * FROM&#9;&quot;+context.connection_verticadb_schema_prod+&quot;.nobill_dim_transaction_key ORDER BY transaction_id )TKEY &#13;&#10;&#9;&#9;&#9;&#9;ON&#9;AGGR.ad_transaction_id=TKEY.transaction_id&#13;&#10;&#9;&#9;&#9;&#9;ORDER BY ad_counter_type_id, ad_eventid&#13;&#10;&#9;&#9;&#9;) OUT1&#13;&#10;&#9;&#9;LEFT JOIN &#13;&#10;&#9;&#9;&#9;(SELECT&#9;dcr_counter_type_id, dcr_category_2 FROM &quot;+context.connection_verticadb_schema_prod+&quot;.nobill_dim_counter_type ORDER BY dcr_counter_type_id )DCR&#9;&#13;&#10;&#9;&#9;ON &#9;OUT1.ad_counter_type_id = DCR.dcr_counter_type_id&#13;&#10;&#9;&#9;)OUT2&#13;&#10;&#9;LEFT JOIN &#13;&#10;&#9;&#9;&#9;&#9;&#9;(select&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;dev_eventid_base as dev_event_id,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;max(dev_event_type) dev_event_type,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;max(dev_category_1) dev_category_1,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;max(dev_category_2) dev_category_2,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;max(dev_category_3) dev_category_3,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;max(dev_category_4) dev_category_4&#13;&#10;&#9;&#9;&#9;&#9;&#9;from&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&quot;+context.connection_verticadb_schema_prod+&quot;.nobill_dim_event&#13;&#10;group by&#13;&#10;&#9;1&#13;&#10;order by&#13;&#10;&#9;1)  DEV &#13;&#10;&#9;ON&#9;OUT2.ad_eventid = DEV.dev_event_id&#13;&#10;&#9;ORDER BY ad_accountnum,&#9;ad_date &#13;&#10;&#9;)OUT3&#13;&#10;GROUP BY ad_accountnum, ad_date )OUT4 &#9;;&quot;"/>
    <elementParameter field="CLOSED_LIST" name="USE_NB_LINE" value="NB_LINE_INSERTED"/>
    <elementParameter field="LABEL" name="USE_NB_LINE_NOTE" value="* Only used if the query is an insert, an update or a delete."/>
    <elementParameter field="CHECK" name="DIE_ON_ERROR" value="true"/>
    <elementParameter field="TEXT" name="PROPERTIES" show="false" value="&quot;&quot;"/>
    <elementParameter field="CHECK" name="PROPAGATE_RECORD_SET" value="false"/>
    <elementParameter field="COLUMN_LIST" name="RECORD_SET_COLUMN" show="false" value=""/>
    <elementParameter field="CHECK" name="USE_PREPAREDSTATEMENT" value="false"/>
    <elementParameter field="TABLE" name="SET_PREPAREDSTATEMENT_PARAMETERS" show="false"/>
    <elementParameter field="TEXT" name="ENCODING" show="false" value="&quot;ISO-8859-15&quot;"/>
    <elementParameter field="TEXT" name="COMMIT_EVERY" value="10000"/>
    <elementParameter field="TEXT" name="LABEL" value="load daily subscriber aggregates"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
    <metadata connector="FLOW" label="nobill_tx_account_history" name="tDBRow_6"/>
    <metadata connector="REJECT" label="nobill_tx_account_history" name="REJECT">
      <column defaultValue="" key="false" length="255" name="errorCode" nullable="true" originalLength="-1" precision="0" sourceType="" type="id_String" usefulColumn="true"/>
      <column defaultValue="" key="false" length="255" name="errorMessage" nullable="true" originalLength="-1" precision="0" sourceType="" type="id_String" usefulColumn="true"/>
    </metadata>
  </node>
  <node componentName="tJobLog" componentVersion="0.101" offsetLabelX="0" offsetLabelY="0" posX="800" posY="256">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tJobLog_4"/>
    <elementParameter field="RADIO" name="DEV_LOG" value="true"/>
    <elementParameter field="RADIO" name="BUSINESS_LOG" value="false"/>
    <elementParameter field="TEXT" name="MESSAGE" value="&quot;VMKSA: Inserted #Records to &quot;+context.target_tablename +&quot; : &quot;+((Integer)globalMap.get(&quot;tDBRow_6_NB_LINE_INSERTED&quot;))+&quot;  for the date : &quot;+context.vLoadDate"/>
    <elementParameter field="CLOSED_LIST" name="PRIORITY" value="20000"/>
    <elementParameter field="TEXT" name="LABEL" value="logs info"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
    <metadata connector="FLOW" name="tJobLog_4"/>
  </node>
  <node componentName="tJava" componentVersion="0.101" offsetLabelX="0" offsetLabelY="0" posX="96" posY="-160">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tJava_2"/>
    <elementParameter field="MEMO_JAVA" name="CODE" value="if(context.vStartDate.equals(null) || context.vStartDate.equals(&quot;&quot;))&#10;{&#9;&#10;&#9;context.vStartDate = TalendDate.addDate(TalendDate.getDate(&quot;yyyy-MM-dd&quot;), &quot;yyyy-MM-dd&quot;, -1, &quot;dd&quot;);&#10;}&#10;if(context.vEndDate.equals(null) || context.vEndDate.equals(&quot;&quot;))&#10;{&#9;&#10;&#9;context.vEndDate = TalendDate.addDate(TalendDate.getDate(&quot;yyyy-MM-dd&quot;), &quot;yyyy-MM-dd&quot;, -1, &quot;dd&quot;);&#10;}&#10;&#10;//System.out.println(&quot;Start Date : &quot;+ context.vStartDate);&#10;//System.out.println(&quot;End Date : &quot;+ context.vEndDate);&#10;&#10;&#10;context.vDays = TalendDate.diffDateIgnoreDST(TalendDate.parseDate(&quot;yyyy-MM-dd&quot;, context.vEndDate),TalendDate.parseDate(&quot;yyyy-MM-dd&quot;, context.vStartDate) , &quot;dd&quot;);&#10;&#10;//System.out.println(&quot;No:of Days : &quot; + context.vDays);"/>
    <elementParameter field="MEMO_IMPORT" name="IMPORT" value="//import java.util.List;"/>
    <elementParameter field="TEXT" name="LABEL" value="calculate days in range to run in loop"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
    <metadata connector="FLOW" name="tJava_2"/>
  </node>
  <node componentName="tLoop" componentVersion="0.102" offsetLabelX="0" offsetLabelY="0" posX="96" posY="32">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tLoop_1"/>
    <elementParameter field="RADIO" name="FORLOOP" value="true"/>
    <elementParameter field="RADIO" name="WHILELOOP" value="false"/>
    <elementParameter field="TEXT" name="FROM" value="0"/>
    <elementParameter field="TEXT" name="TO" value="context.vDays"/>
    <elementParameter field="TEXT" name="STEP" value="1"/>
    <elementParameter field="CHECK" name="INCREASE" value="true"/>
    <elementParameter field="TEXT" name="DECLARATION" show="false" value="int i=0"/>
    <elementParameter field="TEXT" name="CONDITION" show="false" value="i&lt;10"/>
    <elementParameter field="TEXT" name="ITERATION" show="false" value="i++"/>
    <elementParameter field="TEXT" name="LABEL" value="loop through date range"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
  </node>
  <node componentName="tJava" componentVersion="0.101" offsetLabelX="0" offsetLabelY="0" posX="256" posY="32">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tJava_3"/>
    <elementParameter field="MEMO_JAVA" name="CODE" value="&#10;context.vLoadDate = TalendDate.addDate(context.vStartDate, &quot;yyyy-MM-dd&quot;, ((Integer)globalMap.get(&quot;tLoop_1_CURRENT_VALUE&quot;)), &quot;dd&quot;);&#10;&#10;context.vLoadMonth = TalendDate.formatDate(&quot;yyyyMM&quot;, TalendDate.parseDate(&quot;yyyy-MM-dd&quot;, context.vLoadDate));&#10;&#10;//System.out.println(&quot;vLoadDate : &quot; + context.vLoadDate);&#10;//System.out.println(&quot;vLoadMonth : &quot; + context.vLoadMonth);&#10;&#10;if (Integer.parseInt((context.vLoadDate).replaceAll(&quot;-&quot;,&quot;&quot;))&lt;=20190207){&#10;&#9;context.vDimEventTable = context.connection_verticadb_schema_stg+&quot;.nobill_dim_event_20190207&quot;;&#10;}&#9;&#10;else {&#10;&#9;context.vDimEventTable = context.connection_verticadb_schema_prod+&quot;.nobill_dim_event&quot;;&#10;}&#10;"/>
    <elementParameter field="MEMO_IMPORT" name="IMPORT" value="//import java.util.List;"/>
    <elementParameter field="TEXT" name="LABEL" value="set load date"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
    <metadata connector="FLOW" name="tJava_3"/>
  </node>
  <node componentName="tVerticaRow" componentVersion="0.102" offsetLabelX="0" offsetLabelY="0" posX="480" posY="32">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tDBRow_5"/>
    <elementParameter field="CHECK" name="TSTATCATCHER_STATS" value="true"/>
    <elementParameter field="TECHNICAL" name="PROPERTY:PROPERTY_TYPE" show="false" value="REPOSITORY"/>
    <elementParameter field="TECHNICAL" name="PROPERTY:REPOSITORY_PROPERTY_TYPE" show="false" value="_5iHVAEWDEemVVo7G2ZId6g"/>
    <elementParameter field="CLOSED_LIST" name="DB_VERSION" show="false" value="VERTICA_9_0"/>
    <elementParameter field="CHECK" name="USE_EXISTING_CONNECTION" value="true"/>
    <elementParameter field="COMPONENT_LIST" name="CONNECTION" value="tDBConnection_1"/>
    <elementParameter field="TEXT" name="HOST" show="false" value="&quot;10.4.32.25&quot;"/>
    <elementParameter field="TEXT" name="PORT" show="false" value="&quot;5433&quot;"/>
    <elementParameter field="TEXT" name="DBNAME" show="false" value="&quot;ksa_db_prod&quot;"/>
    <elementParameter field="TEXT" name="SCHEMA_DB" show="false" value="&quot;prod&quot;"/>
    <elementParameter field="TEXT" name="TYPE" show="false" value="VERTICA"/>
    <elementParameter field="TEXT" name="USER" show="false" value="&quot;talend&quot;"/>
    <elementParameter field="PASSWORD" name="PASS" show="false" value="enc:system.encryption.key.v1:/WH8kn+aQ+hpmHrbBr4sYmcaz1qrRitQmhTigwC8SfY8OVffCI5/3w=="/>
    <elementParameter field="TECHNICAL" name="SCHEMA_REJECT:SCHEMA_TYPE" show="false" value="REPOSITORY"/>
    <elementParameter field="TECHNICAL" name="SCHEMA_REJECT:REPOSITORY_SCHEMA_TYPE" show="false" value="_5iHVAEWDEemVVo7G2ZId6g - "/>
    <elementParameter field="DBTABLE" name="TABLE" value="&quot;&quot;"/>
    <elementParameter field="QUERYSTORE_TYPE" name="QUERYSTORE" value="&quot;&quot;"/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:REPOSITORY_QUERYSTORE_TYPE" show="false" value=""/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:QUERYSTORE_TYPE" value="BUILT_IN"/>
    <elementParameter field="MEMO_SQL" name="QUERY" value="&quot;DELETE &#13;&#10;&#9;&#9;FROM &#13;&#10;&#9;&#9;&#9;&#9;&quot;+context.connection_verticadb_schema_prod+&quot;.nobill_aggr_subscriber_daily&#13;&#10;        WHERE &#13;&#10;&#9;&#9;&#9;&#9;uds_date = '&quot;+context.vLoadDate+ &quot;'&quot;"/>
    <elementParameter field="CLOSED_LIST" name="USE_NB_LINE" value="NB_LINE_DELETED"/>
    <elementParameter field="LABEL" name="USE_NB_LINE_NOTE" value="* Only used if the query is an insert, an update or a delete."/>
    <elementParameter field="CHECK" name="DIE_ON_ERROR" value="true"/>
    <elementParameter field="TEXT" name="PROPERTIES" show="false" value="&quot;&quot;"/>
    <elementParameter field="CHECK" name="PROPAGATE_RECORD_SET" value="false"/>
    <elementParameter field="COLUMN_LIST" name="RECORD_SET_COLUMN" show="false" value=""/>
    <elementParameter field="CHECK" name="USE_PREPAREDSTATEMENT" value="false"/>
    <elementParameter field="TABLE" name="SET_PREPAREDSTATEMENT_PARAMETERS" show="false"/>
    <elementParameter field="TEXT" name="ENCODING" show="false" value="&quot;ISO-8859-15&quot;"/>
    <elementParameter field="TEXT" name="COMMIT_EVERY" value="10000"/>
    <elementParameter field="TEXT" name="LABEL" value="clear records in daily subscriber aggregates"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
    <metadata connector="FLOW" label="nobill_tx_account_history" name="tDBRow_5"/>
    <metadata connector="REJECT" label="nobill_tx_account_history" name="REJECT">
      <column defaultValue="" key="false" length="255" name="errorCode" nullable="true" originalLength="-1" precision="0" sourceType="" type="id_String" usefulColumn="true"/>
      <column defaultValue="" key="false" length="255" name="errorMessage" nullable="true" originalLength="-1" precision="0" sourceType="" type="id_String" usefulColumn="true"/>
    </metadata>
  </node>
  <node componentName="tJobLog" componentVersion="0.101" offsetLabelX="0" offsetLabelY="0" posX="480" posY="256">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tJobLog_5"/>
    <elementParameter field="RADIO" name="DEV_LOG" value="true"/>
    <elementParameter field="RADIO" name="BUSINESS_LOG" value="false"/>
    <elementParameter field="TEXT" name="MESSAGE" value="&quot;VMKSA: Deleted #Records from &quot;+context.target_tablename +&quot; : &quot;+((Integer)globalMap.get(&quot;tDBRow_5_NB_LINE_DELETED&quot;))+&quot; for the date : &quot;+context.vLoadDate +&quot;. Now loading daily subscriber aggregates&quot;"/>
    <elementParameter field="CLOSED_LIST" name="PRIORITY" value="20000"/>
    <elementParameter field="TEXT" name="LABEL" value="logs info"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
    <metadata connector="FLOW" name="tJobLog_5"/>
  </node>
  <node componentName="tVerticaConnection" componentVersion="0.102" offsetLabelX="0" offsetLabelY="0" posX="-128" posY="-160">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tDBConnection_1"/>
    <elementParameter field="CLOSED_LIST" name="DB_VERSION" value="VERTICA_9_0"/>
    <elementParameter field="TEXT" name="HOST" value="context.connection_verticadb_host"/>
    <elementParameter field="TEXT" name="TYPE" show="false" value="VERTICA"/>
    <elementParameter field="TEXT" name="PORT" value="context.connection_verticadb_port"/>
    <elementParameter field="TEXT" name="DBNAME" value="context.connection_verticadb_database"/>
    <elementParameter field="TEXT" name="SCHEMA_DB" value="context.connection_verticadb_schema_prod"/>
    <elementParameter field="TEXT" name="USER" value="context.connection_verticadb_username"/>
    <elementParameter field="PASSWORD" name="PASS" value="enc:system.encryption.key.v1:MMcVictB5frm/+R7WAxeD75W14rIhz1vSjGRkpwpaEUeN5u65GKEHazUxfLnYT6genfdmcmvFbFon36DeTqFWso="/>
    <elementParameter field="TEXT" name="PROPERTIES" value="context.connection_verticadb_additionalparam"/>
    <elementParameter field="ENCODING_TYPE" name="ENCODING" show="false" value="&quot;ISO-8859-15&quot;"/>
    <elementParameter field="TECHNICAL" name="ENCODING:ENCODING_TYPE" value="ISO-8859-15"/>
    <elementParameter field="CHECK" name="USE_SHARED_CONNECTION" value="false"/>
    <elementParameter field="TEXT" name="SHARED_CONNECTION_NAME" show="false" value=""/>
    <elementParameter field="CHECK" name="AUTO_COMMIT" value="false"/>
    <elementParameter field="TEXT" name="LABEL" value="verticadb"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
  </node>
  <node componentName="tVerticaCommit" componentVersion="0.102" offsetLabelX="0" offsetLabelY="0" posX="1088" posY="32">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tDBCommit_1"/>
    <elementParameter field="COMPONENT_LIST" name="CONNECTION" value="tDBConnection_1"/>
    <elementParameter field="CHECK" name="CLOSE" value="false"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
    <metadata connector="FLOW" name="tDBCommit_1"/>
  </node>
  <connection connectorName="COMPONENT_OK" label="OnComponentOk" lineStyle="3" metaname="tDBRow_1" offsetLabelX="0" offsetLabelY="0" source="tDBRow_1" target="tDBRow_4">
    <elementParameter field="CHECK" name="ACTIVATE" show="false" value="false"/>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="OnComponentOk1"/>
  </connection>
  <connection connectorName="COMPONENT_OK" label="OnComponentOk" lineStyle="3" metaname="tDBRow_2" offsetLabelX="0" offsetLabelY="0" outputId="1" source="tDBRow_2" target="tDBRow_3">
    <elementParameter field="CHECK" name="ACTIVATE" show="false" value="false"/>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="OnComponentOk3"/>
  </connection>
  <connection connectorName="COMPONENT_OK" label="OnComponentOk" lineStyle="3" metaname="tDBRow_2" offsetLabelX="0" offsetLabelY="0" outputId="2" source="tDBRow_2" target="tJobLog_2">
    <elementParameter field="CHECK" name="ACTIVATE" show="false" value="false"/>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="OnComponentOk6"/>
  </connection>
  <connection connectorName="COMPONENT_OK" label="OnComponentOk" lineStyle="3" metaname="tDBRow_3" offsetLabelX="0" offsetLabelY="0" source="tDBRow_3" target="tJobLog_3">
    <elementParameter field="CHECK" name="ACTIVATE" show="false" value="false"/>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="OnComponentOk4"/>
  </connection>
  <connection connectorName="COMPONENT_OK" label="OnComponentOk" lineStyle="3" metaname="tDBRow_4" offsetLabelX="0" offsetLabelY="0" outputId="1" source="tDBRow_4" target="tJobLog_1">
    <elementParameter field="CHECK" name="ACTIVATE" show="false" value="false"/>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="OnComponentOk2"/>
  </connection>
  <connection connectorName="COMPONENT_OK" label="OnComponentOk" lineStyle="3" metaname="tDBRow_4" offsetLabelX="0" offsetLabelY="0" outputId="2" source="tDBRow_4" target="tDBRow_2">
    <elementParameter field="CHECK" name="ACTIVATE" show="false" value="false"/>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="OnComponentOk5"/>
  </connection>
  <connection connectorName="COMPONENT_OK" label="OnComponentOk" lineStyle="3" metaname="tDBRow_6" offsetLabelX="0" offsetLabelY="0" outputId="1" source="tDBRow_6" target="tDBCommit_1">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="OnComponentOk12"/>
  </connection>
  <connection connectorName="COMPONENT_OK" label="OnComponentOk" lineStyle="3" metaname="tDBRow_6" offsetLabelX="0" offsetLabelY="0" outputId="2" source="tDBRow_6" target="tJobLog_4">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="OnComponentOk10"/>
  </connection>
  <connection connectorName="SUBJOB_OK" label="OnSubjobOk" lineStyle="1" metaname="tJava_2" offsetLabelX="0" offsetLabelY="0" source="tJava_2" target="tLoop_1">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="OnSubjobOk1"/>
  </connection>
  <connection connectorName="ITERATE" label="Iterate" lineStyle="7" metaname="tLoop_1" offsetLabelX="0" offsetLabelY="0" source="tLoop_1" target="tJava_3">
    <elementParameter field="CHECK" name="ENABLE_PARALLEL" value="false"/>
    <elementParameter field="TEXT" name="NUMBER_PARALLEL" show="false" value="2"/>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="iterate1"/>
  </connection>
  <connection connectorName="ITERATE" label="Iterate" lineStyle="7" metaname="tJava_3" offsetLabelX="0" offsetLabelY="0" source="tJava_3" target="tDBRow_5">
    <elementParameter field="CHECK" name="ENABLE_PARALLEL" value="false"/>
    <elementParameter field="TEXT" name="NUMBER_PARALLEL" show="false" value="2"/>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="iterate2"/>
  </connection>
  <connection connectorName="COMPONENT_OK" label="OnComponentOk" lineStyle="3" metaname="tDBRow_5" offsetLabelX="0" offsetLabelY="0" outputId="1" source="tDBRow_5" target="tJobLog_5">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="OnComponentOk9"/>
  </connection>
  <connection connectorName="COMPONENT_OK" label="OnComponentOk" lineStyle="3" metaname="tDBRow_5" offsetLabelX="0" offsetLabelY="0" outputId="2" source="tDBRow_5" target="tDBRow_6">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="OnComponentOk11"/>
  </connection>
  <connection connectorName="SUBJOB_OK" label="OnSubjobOk" lineStyle="1" metaname="tDBConnection_1" offsetLabelX="0" offsetLabelY="0" source="tDBConnection_1" target="tJava_2">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="OnSubjobOk2"/>
  </connection>
  <subjob>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tDBRow_1"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" show="false" value="92;131;150"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="207;226;236"/>
  </subjob>
  <subjob>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tDBRow_2"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" show="false" value="92;131;150"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="207;226;236"/>
  </subjob>
  <subjob>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tJobLog_1"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" show="false" value="92;131;150"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="207;226;236"/>
  </subjob>
  <subjob>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tJobLog_2"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" show="false" value="92;131;150"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="207;226;236"/>
  </subjob>
  <subjob>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tDBRow_3"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" show="false" value="92;131;150"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="207;226;236"/>
  </subjob>
  <subjob>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tJobLog_3"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" show="false" value="92;131;150"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="207;226;236"/>
  </subjob>
  <subjob>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tDBRow_4"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" show="false" value="92;131;150"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="207;226;236"/>
  </subjob>
  <subjob>
    <elementParameter field="CHECK" name="SHOW_SUBJOB_TITLE" value="true"/>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tDBRow_6"/>
    <elementParameter field="TEXT" name="SUBJOB_TITLE" value="load records"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" value="0;255;128"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="207;226;236"/>
  </subjob>
  <subjob>
    <elementParameter field="CHECK" name="SHOW_SUBJOB_TITLE" value="true"/>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tJobLog_4"/>
    <elementParameter field="TEXT" name="SUBJOB_TITLE" value="logs info"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" value="0;255;128"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="207;226;236"/>
  </subjob>
  <subjob>
    <elementParameter field="CHECK" name="SHOW_SUBJOB_TITLE" value="true"/>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tJava_2"/>
    <elementParameter field="TEXT" name="SUBJOB_TITLE" value="set date range"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" value="0;255;128"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="207;226;236"/>
  </subjob>
  <subjob>
    <elementParameter field="CHECK" name="SHOW_SUBJOB_TITLE" value="true"/>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tLoop_1"/>
    <elementParameter field="TEXT" name="SUBJOB_TITLE" value="Iterate Extract and Load"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" value="0;255;128"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="207;226;236"/>
  </subjob>
  <subjob>
    <elementParameter field="CHECK" name="SHOW_SUBJOB_TITLE" value="true"/>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tJobLog_5"/>
    <elementParameter field="TEXT" name="SUBJOB_TITLE" value="logs info"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" value="0;255;128"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="207;226;236"/>
  </subjob>
  <subjob>
    <elementParameter field="CHECK" name="SHOW_SUBJOB_TITLE" value="true"/>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tDBConnection_1"/>
    <elementParameter field="TEXT" name="SUBJOB_TITLE" value="Connection PROD"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" value="0;255;128"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="207;226;236"/>
  </subjob>
  <subjob>
    <elementParameter field="CHECK" name="SHOW_SUBJOB_TITLE" value="true"/>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tDBCommit_1"/>
    <elementParameter field="TEXT" name="SUBJOB_TITLE" value="DB commit"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" value="0;255;128"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="207;226;236"/>
  </subjob>
<Signature xmlns="http://www.w3.org/2000/09/xmldsig#" Id="_162ad3c3-a92a-4adf-b850-e29d47a1bd85"><SignedInfo><CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/><SignatureMethod Algorithm="http://www.w3.org/2001/04/xmldsig-more#rsa-sha512"/><Reference URI=""><Transforms><Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/></Transforms><DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha512"/><DigestValue>hwLRRk20/z2z04hpqmea+SrvjeoQmuOu8kGUDvpaicYsErehvnebz9bzK2GKF8/hHzkkavud8lqu&#13;
eDqlX0NktA==</DigestValue></Reference><Reference Type="http://www.w3.org/2000/09/xmldsig#SignatureProperties" URI="#_b8a307e9-1788-41d8-bd0e-f77b151534dc"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/></Transforms><DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha512"/><DigestValue>x0wS/UVDbYzhpRvSvQUfvAIyMyJvC3qfg+NOaOQkBXgloKpqPXvqcc8sW4OupAxA5ieqWqEEpadk&#13;
5YkRb6cFqQ==</DigestValue></Reference></SignedInfo><SignatureValue>n5LSuFajsN32Dxe++E57pP5HOaIIPmW65Enp/h9ig7L85GdM1bpgIki3YTlQ8rwNPDWsCCxX3ciY&#13;
C9nTDivOyjRrARPCPwdWLpR2fEGjGR8W2/Bxd0b6L5hbrhaAlhgQnk2pJ5pOJuvHZasnvJ/Mj2PD&#13;
WN4Q43GIFbi6LR3BF+UDBxyOmgAMhLQHPvmOWvqoNVyIygjR3k3ChSmbKq2Tay0cfZMzO77Z+HsO&#13;
1D+iTFDaKUSHpFyvX37aXdF0dW1F94IBTPLqDofsqQ2uGAe9kLXdoaFDVZbScBlCnyTvZMjrI3XX&#13;
fxZUEsol/x4PurvQZSzIFGXP1PAcruQ44Np2Ww==</SignatureValue><KeyInfo><X509Data><X509SubjectName>C=FR,ST=Paris,L=Paris,O=Talend Inc.,OU=R&amp;D,CN=Talend Code Signing certificate</X509SubjectName><X509Certificate>MIIFADCCAuigAwIBAgIIA2OsD6bRyj0wDQYJKoZIhvcNAQELBQAwgY0xCzAJBgNVBAYTAkZSMQ4w&#13;
DAYDVQQIEwVQYXJpczEOMAwGA1UEBxMFUGFyaXMxFDASBgNVBAoTC1RhbGVuZCBJbmMuMQwwCgYD&#13;
VQQLDANSJkQxFjAUBgNVBAMMDVRhbGVuZCBSJkQgQ0ExIjAgBgkqhkiG9w0BCQEWE3NlY3VyaXR5&#13;
QHRhbGVuZC5jb20wHhcNMTkwNjAzMDgxODIwWhcNMjkwNjAzMDAwMDAwWjB7MSgwJgYDVQQDEx9U&#13;
YWxlbmQgQ29kZSBTaWduaW5nIGNlcnRpZmljYXRlMQwwCgYDVQQLDANSJkQxFDASBgNVBAoTC1Rh&#13;
bGVuZCBJbmMuMQ4wDAYDVQQHEwVQYXJpczEOMAwGA1UECBMFUGFyaXMxCzAJBgNVBAYTAkZSMIIB&#13;
IjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAp5TMF8BmRt8dY51t9kIDdDkoOKVVytJN2gn2&#13;
DhMGi8hzpUofNDykJDhe9SPqyJdGZ6o/h7laTA0/CivKyPT1OJQ9E2gMHKs8cTZM/cO2w0Atlqkl&#13;
alIxepol0DNnUtmECVBqdnVsJesfmdoeptxgJAtxYbquFsTsrATNY2cscXpwmOca/Ewip48WQLFx&#13;
e5s067jaIsAQGRIqpIup3bOtWBySrtImJ40lQCPeEcl96qzkv3utaVaNc3ukkhYkCDbMbK8NVd1B&#13;
CVeeIBAe+n/SdpHH20o+6eIiZecsBGDLwlTYrFvuVqAa6xI7y8Vdz6irjPAVBEtG/iOc782aJ/lZ&#13;
TwIDAQABo3UwczAMBgNVHRMBAf8EAjAAMA4GA1UdDwEB/wQEAwIHgDATBgNVHSUEDDAKBggrBgEF&#13;
BQcDAzAdBgNVHQ4EFgQUGdfzQEbjQnANq28sfhEMTx+rsOcwHwYDVR0jBBgwFoAU530Lcvy1gZnG&#13;
gCvZLOyCczK1qPcwDQYJKoZIhvcNAQELBQADggIBAEr22wnaQwZm2dhbUCqD+qZpTq2AF/tzxqAM&#13;
eL/CiTjPbTblS4SNNwCKvTgMe9ucpUbenXmK7xE+DU9dN4om+t3VHbkOLQVyuLcd2WGsy7ZGwRvA&#13;
f+TFwLbwjyTukOGm6Sd1qyZgvCPzBsKnft6vscvGy2yEpmFCeHJyBP8pvchg607zguRdNbkGYZXw&#13;
G6jNipAbTtzdPTFKKr1bEf0sUGqMrlZIMPjflh2Vewu8ImNdX5IZdvBD6DdFVOC5wqV6u+W9ukE/&#13;
mXZxDBYNl2AF7FTh04ucEVN3mHv7m2L0uFvUlhxchcagJhJsdQG+A0LVCemHbp6CSNQJx02KxqUG&#13;
hakvpzhOyLo91h8YAQrEZJdNuKA8IYmBrFZQZDCz0uywKSyFfzPyJhvxylCLG/iDPPfE0VWcrMJ/&#13;
WQJly/2XPg/NBCTF3pSKS0kCiA7PeaI3cWkMYYA3PMwYDvzqs1opBRglG7ikj0bQxSm3lcjMuuvW&#13;
gBRksFKjP3K/nztsjSoYITOM9jR29ReIL3v0E8RbAFwA2RGq6Dxd0ixfbucMesy5Gnr8tfYy6rW+&#13;
qSQqd3ah4+PSzBNVwIB4ytpdrG3SlhCI2i2Th8ek8Sjsaquh9qPAerWNd2+84HWOOGj1Xe1qc6vg&#13;
qqu6JoK9EXKDiwBqDVkueIa+MhamE1VDnhn2pPui</X509Certificate></X509Data></KeyInfo><Object><SignatureProperties><SignatureProperty Id="_b8a307e9-1788-41d8-bd0e-f77b151534dc" Target="#_162ad3c3-a92a-4adf-b850-e29d47a1bd85"><Timestamp>2023-08-30 10:41:21</Timestamp></SignatureProperty></SignatureProperties></Object></Signature></talendfile:ProcessType>